/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package hospitalidad;

import hospitalidad.Gestores.GestionAutobusesBD;
import hospitalidad.Gestores.GestionHabitacionesBD;
import hospitalidad.Gestores.GestionPersonasBD;
import hospitalidad.Gestores.GestionViajesBD;
import hospitalidad.Gestores.GestionTiposViajeroBD;
import hospitalidad.beans.AutobusBean;
import hospitalidad.beans.HabitacionBean;
import hospitalidad.beans.PersonaBean;
import java.awt.Color;
import java.awt.Dimension;
import java.awt.event.MouseAdapter;
import java.util.ArrayList;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JDialog;
import javax.swing.JFrame;
import javax.swing.JOptionPane;
import javax.swing.ListSelectionModel;
import javax.swing.UIManager;
import javax.swing.UnsupportedLookAndFeelException;
import javax.swing.event.ListSelectionEvent;
import javax.swing.event.ListSelectionListener;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author vPalomo
 */
public class Principal extends javax.swing.JFrame {

    private ArrayList<PersonaBean> listaPersonas;
    private ArrayList<PersonaBean> listaPersonasSinAutobus;
    private ArrayList<AutobusBean> listaAutobuses;
    private ArrayList<HabitacionBean> listaHabitaciones;
    private String filtroViaje;
    private String filtroTipoViajero;

    /**
     * Creates new form Principal
     */
    public Principal() {
        try {
            UIManager.setLookAndFeel("com.sun.java.swing.plaf.windows.WindowsLookAndFeel");
        } catch (ClassNotFoundException ex) {
            Logger.getLogger(Principal.class.getName()).log(Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            Logger.getLogger(Principal.class.getName()).log(Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            Logger.getLogger(Principal.class.getName()).log(Level.SEVERE, null, ex);
        } catch (UnsupportedLookAndFeelException ex) {
            Logger.getLogger(Principal.class.getName()).log(Level.SEVERE, null, ex);
        }
        initComponents();
        //ponListenerTablaHabitaciones();
        ponListenerTablaAutobuses();
        ponListenerTablaParsonas();
        ponListenerTablaHabitaciones();
        cargaTablaPersonas(true);
        prepararVistaPasajerosAutobus();
        
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel2 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jTabbedPane1 = new javax.swing.JTabbedPane();
        jPanelPeregrinaciones = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTablePersonas = new javax.swing.JTable();
        jPanel3 = new javax.swing.JPanel();
        jLabelIdAutobusEtiqueta = new javax.swing.JLabel();
        jLabelDescripcionAutobus = new javax.swing.JLabel();
        jLabelObservaciones = new javax.swing.JLabel();
        jLabelIdAutobus = new javax.swing.JLabel();
        jScrollPane5 = new javax.swing.JScrollPane();
        jTableAutobusPersona = new javax.swing.JTable();
        jPanel5 = new javax.swing.JPanel();
        jLabelDesc1 = new javax.swing.JLabel();
        jLabelDesc2 = new javax.swing.JLabel();
        jScrollPane10 = new javax.swing.JScrollPane();
        jTableHabitacionesPersona = new javax.swing.JTable();
        jLabelObser = new javax.swing.JLabel();
        jLabelCamasLibres = new javax.swing.JLabel();
        jButtonEliminaDeLaPeregrinacion = new javax.swing.JButton();
        jButtonAgregaPersonas = new javax.swing.JButton();
        jLabel4 = new javax.swing.JLabel();
        labelTotal = new javax.swing.JLabel();
        comboTipoViajero = new javax.swing.JComboBox<>();
        jLabel3 = new javax.swing.JLabel();
        jPanelAutobuses = new javax.swing.JPanel();
        jPanel6 = new javax.swing.JPanel();
        jScrollPane2 = new javax.swing.JScrollPane();
        jTableAutobuses = new javax.swing.JTable();
        jScrollPane4 = new javax.swing.JScrollPane();
        jTablePersonasBus = new javax.swing.JTable();
        jButton1 = new javax.swing.JButton();
        jButton4 = new javax.swing.JButton();
        jPanelPersonasSinAutobus = new javax.swing.JPanel();
        jScrollPane3 = new javax.swing.JScrollPane();
        jTablePersonasSinAutobus = new javax.swing.JTable();
        jButton5 = new javax.swing.JButton();
        jPanelHabitaciones = new javax.swing.JPanel();
        jScrollPane6 = new javax.swing.JScrollPane();
        jTableHabitaciones = new javax.swing.JTable();
        jScrollPane7 = new javax.swing.JScrollPane();
        jTablePersonasHabitacion = new javax.swing.JTable();
        jButton6 = new javax.swing.JButton();
        jButton7 = new javax.swing.JButton();
        jComboHotel = new javax.swing.JComboBox<>();
        jLabel5 = new javax.swing.JLabel();
        jPanelPersonasSinHabitacion = new javax.swing.JPanel();
        jScrollPane9 = new javax.swing.JScrollPane();
        jTablePersonasSinHabitacion = new javax.swing.JTable();
        jButton8 = new javax.swing.JButton();
        jButtonCrearPersona = new javax.swing.JButton();
        jButton2 = new javax.swing.JButton();
        jButton3 = new javax.swing.JButton();
        comboViaje = new javax.swing.JComboBox<>();
        jLabel2 = new javax.swing.JLabel();
        jButton9 = new javax.swing.JButton();
        jButton10 = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jLabel1.setText("Hospitalidad de Toledo");

        jTabbedPane1.setAutoscrolls(true);
        jTabbedPane1.addComponentListener(new java.awt.event.ComponentAdapter() {
            public void componentShown(java.awt.event.ComponentEvent evt) {
                jTabbedPane1ComponentShown(evt);
            }
        });

        jPanelPeregrinaciones.addComponentListener(new java.awt.event.ComponentAdapter() {
            public void componentShown(java.awt.event.ComponentEvent evt) {
                jPanelPeregrinacionesComponentShown(evt);
            }
        });

        jTablePersonas.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null}
            },
            new String [] {
                "Sel", "Id", "DNI", "Apellidos", "Nombre", "Fecha Nac.", "Tipo"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Boolean.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class
            };
            boolean[] canEdit = new boolean [] {
                true, false, false, false, false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jTablePersonas.setAutoResizeMode(javax.swing.JTable.AUTO_RESIZE_LAST_COLUMN);
        jTablePersonas.setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);
        jTablePersonas.getTableHeader().setResizingAllowed(false);
        jTablePersonas.getTableHeader().setReorderingAllowed(false);
        jScrollPane1.setViewportView(jTablePersonas);
        if (jTablePersonas.getColumnModel().getColumnCount() > 0) {
            jTablePersonas.getColumnModel().getColumn(0).setPreferredWidth(5);
            jTablePersonas.getColumnModel().getColumn(1).setPreferredWidth(5);
            jTablePersonas.getColumnModel().getColumn(2).setPreferredWidth(20);
            jTablePersonas.getColumnModel().getColumn(3).setPreferredWidth(75);
            jTablePersonas.getColumnModel().getColumn(4).setPreferredWidth(75);
            jTablePersonas.getColumnModel().getColumn(5).setPreferredWidth(20);
            jTablePersonas.getColumnModel().getColumn(6).setPreferredWidth(20);
        }

        jPanel3.setBorder(javax.swing.BorderFactory.createTitledBorder("Autobus"));

        jLabelIdAutobusEtiqueta.setText("Id Autobus:");

        jLabelDescripcionAutobus.setText("DescripciÃ³n");

        jLabelObservaciones.setText("Observaciones");

        jLabelIdAutobus.setText("jLabel7");

        jTableAutobusPersona.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Id", "DNI", "Apellidos", "Nombre"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane5.setViewportView(jTableAutobusPersona);
        if (jTableAutobusPersona.getColumnModel().getColumnCount() > 0) {
            jTableAutobusPersona.getColumnModel().getColumn(0).setResizable(false);
        }

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addComponent(jScrollPane5, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
                        .addContainerGap())
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabelObservaciones)
                            .addComponent(jLabelDescripcionAutobus, javax.swing.GroupLayout.PREFERRED_SIZE, 222, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jLabelIdAutobusEtiqueta)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLabelIdAutobus)
                        .addGap(21, 21, 21))))
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jLabelIdAutobusEtiqueta)
                        .addComponent(jLabelIdAutobus))
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jLabelDescripcionAutobus)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabelObservaciones)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jScrollPane5, javax.swing.GroupLayout.DEFAULT_SIZE, 231, Short.MAX_VALUE)
                .addContainerGap())
        );

        jPanel5.setBorder(javax.swing.BorderFactory.createTitledBorder("HabitaciÃ³n"));

        jLabelDesc1.setText("jLabel4");

        jLabelDesc2.setText("jLabel5");

        jTableHabitacionesPersona.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Id", "DNI", "Apellidos", "Nombre"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane10.setViewportView(jTableHabitacionesPersona);
        if (jTableHabitacionesPersona.getColumnModel().getColumnCount() > 0) {
            jTableHabitacionesPersona.getColumnModel().getColumn(0).setResizable(false);
        }

        jLabelObser.setText("jLabel6");

        jLabelCamasLibres.setText("jLabel7");

        javax.swing.GroupLayout jPanel5Layout = new javax.swing.GroupLayout(jPanel5);
        jPanel5.setLayout(jPanel5Layout);
        jPanel5Layout.setHorizontalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel5Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabelDesc1)
                    .addComponent(jLabelDesc2))
                .addGap(139, 139, 139)
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabelCamasLibres)
                    .addComponent(jLabelObser))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(jPanel5Layout.createSequentialGroup()
                    .addContainerGap()
                    .addComponent(jScrollPane10, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
                    .addContainerGap()))
        );
        jPanel5Layout.setVerticalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addGap(6, 6, 6)
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabelDesc1)
                    .addComponent(jLabelObser))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabelDesc2)
                    .addComponent(jLabelCamasLibres))
                .addContainerGap(136, Short.MAX_VALUE))
            .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(jPanel5Layout.createSequentialGroup()
                    .addGap(57, 57, 57)
                    .addComponent(jScrollPane10, javax.swing.GroupLayout.PREFERRED_SIZE, 102, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addContainerGap(22, Short.MAX_VALUE)))
        );

        jButtonEliminaDeLaPeregrinacion.setText("Eliminar de la peregrinaciÃ³n");
        jButtonEliminaDeLaPeregrinacion.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonEliminaDeLaPeregrinacionActionPerformed(evt);
            }
        });

        jButtonAgregaPersonas.setText("Agragar personas");
        jButtonAgregaPersonas.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonAgregaPersonasActionPerformed(evt);
            }
        });

        jLabel4.setText("Total lista:");

        labelTotal.setText("jLabel5");

        comboTipoViajero.setModel(GestionTiposViajeroBD.getModeloComboTipoViajero(true));
        comboTipoViajero.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                comboTipoViajeroActionPerformed(evt);
            }
        });

        jLabel3.setText("Equipo:");

        javax.swing.GroupLayout jPanelPeregrinacionesLayout = new javax.swing.GroupLayout(jPanelPeregrinaciones);
        jPanelPeregrinaciones.setLayout(jPanelPeregrinacionesLayout);
        jPanelPeregrinacionesLayout.setHorizontalGroup(
            jPanelPeregrinacionesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanelPeregrinacionesLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanelPeregrinacionesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanelPeregrinacionesLayout.createSequentialGroup()
                        .addComponent(jButtonAgregaPersonas)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jButtonEliminaDeLaPeregrinacion))
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 586, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(jPanelPeregrinacionesLayout.createSequentialGroup()
                        .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 61, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(labelTotal))
                    .addGroup(jPanelPeregrinacionesLayout.createSequentialGroup()
                        .addComponent(jLabel3)
                        .addGap(50, 50, 50)
                        .addComponent(comboTipoViajero, javax.swing.GroupLayout.PREFERRED_SIZE, 192, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 17, Short.MAX_VALUE)
                .addGroup(jPanelPeregrinacionesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jPanel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPanel5, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(51, 51, 51))
        );
        jPanelPeregrinacionesLayout.setVerticalGroup(
            jPanelPeregrinacionesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanelPeregrinacionesLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanelPeregrinacionesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(jPanelPeregrinacionesLayout.createSequentialGroup()
                        .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jPanel5, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanelPeregrinacionesLayout.createSequentialGroup()
                        .addGroup(jPanelPeregrinacionesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(comboTipoViajero, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel3))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 502, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(jPanelPeregrinacionesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel4)
                    .addComponent(labelTotal))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanelPeregrinacionesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButtonEliminaDeLaPeregrinacion)
                    .addComponent(jButtonAgregaPersonas))
                .addContainerGap())
        );

        jPanel5.getAccessibleContext().setAccessibleName("Habitacion");
        jPanel5.getAccessibleContext().setAccessibleDescription("");

        jTabbedPane1.addTab("Peregrinaciones", jPanelPeregrinaciones);

        jPanelAutobuses.addComponentListener(new java.awt.event.ComponentAdapter() {
            public void componentShown(java.awt.event.ComponentEvent evt) {
                jPanelAutobusesComponentShown(evt);
            }
        });

        jTableAutobuses.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null}
            },
            new String [] {
                "id", "DescripciÃ³n", "Observaciones", "Plazas Enf", "Plazas Hos"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Integer.class, java.lang.String.class, java.lang.String.class, java.lang.Integer.class, java.lang.Integer.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jTableAutobuses.setAutoResizeMode(javax.swing.JTable.AUTO_RESIZE_LAST_COLUMN);
        jTableAutobuses.getTableHeader().setReorderingAllowed(false);
        jTableAutobuses.addPropertyChangeListener(new java.beans.PropertyChangeListener() {
            public void propertyChange(java.beans.PropertyChangeEvent evt) {
                jTableAutobusesPropertyChange(evt);
            }
        });
        jScrollPane2.setViewportView(jTableAutobuses);
        if (jTableAutobuses.getColumnModel().getColumnCount() > 0) {
            jTableAutobuses.getColumnModel().getColumn(0).setResizable(false);
            jTableAutobuses.getColumnModel().getColumn(0).setPreferredWidth(10);
            jTableAutobuses.getColumnModel().getColumn(1).setPreferredWidth(80);
            jTableAutobuses.getColumnModel().getColumn(2).setPreferredWidth(80);
            jTableAutobuses.getColumnModel().getColumn(3).setPreferredWidth(30);
            jTableAutobuses.getColumnModel().getColumn(4).setPreferredWidth(30);
        }

        jTablePersonasBus.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Sel", "Id", "DNI", "Apellidos", "Nombre", "Tipo"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Boolean.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class
            };
            boolean[] canEdit = new boolean [] {
                true, false, false, false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jTablePersonasBus.setAutoResizeMode(javax.swing.JTable.AUTO_RESIZE_OFF);
        jTablePersonasBus.setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);
        jTablePersonasBus.getTableHeader().setResizingAllowed(false);
        jTablePersonasBus.getTableHeader().setReorderingAllowed(false);
        jScrollPane4.setViewportView(jTablePersonasBus);
        if (jTablePersonasBus.getColumnModel().getColumnCount() > 0) {
            jTablePersonasBus.getColumnModel().getColumn(0).setResizable(false);
            jTablePersonasBus.getColumnModel().getColumn(0).setPreferredWidth(30);
            jTablePersonasBus.getColumnModel().getColumn(1).setResizable(false);
            jTablePersonasBus.getColumnModel().getColumn(1).setPreferredWidth(35);
            jTablePersonasBus.getColumnModel().getColumn(2).setResizable(false);
            jTablePersonasBus.getColumnModel().getColumn(2).setPreferredWidth(100);
            jTablePersonasBus.getColumnModel().getColumn(3).setResizable(false);
            jTablePersonasBus.getColumnModel().getColumn(3).setPreferredWidth(165);
            jTablePersonasBus.getColumnModel().getColumn(4).setResizable(false);
            jTablePersonasBus.getColumnModel().getColumn(4).setPreferredWidth(100);
            jTablePersonasBus.getColumnModel().getColumn(5).setResizable(false);
            jTablePersonasBus.getColumnModel().getColumn(5).setPreferredWidth(100);
        }

        jButton1.setText("Agregar pasajeros");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jButton4.setText("Quitar Persona");
        jButton4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton4ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel6Layout = new javax.swing.GroupLayout(jPanel6);
        jPanel6.setLayout(jPanel6Layout);
        jPanel6Layout.setHorizontalGroup(
            jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel6Layout.createSequentialGroup()
                .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButton1))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel6Layout.createSequentialGroup()
                        .addComponent(jButton4)
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addComponent(jScrollPane4, javax.swing.GroupLayout.DEFAULT_SIZE, 545, Short.MAX_VALUE))
                .addContainerGap())
        );
        jPanel6Layout.setVerticalGroup(
            jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel6Layout.createSequentialGroup()
                .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 544, Short.MAX_VALUE)
                    .addComponent(jScrollPane4))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButton1)
                    .addComponent(jButton4))
                .addGap(0, 0, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout jPanelAutobusesLayout = new javax.swing.GroupLayout(jPanelAutobuses);
        jPanelAutobuses.setLayout(jPanelAutobusesLayout);
        jPanelAutobusesLayout.setHorizontalGroup(
            jPanelAutobusesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanelAutobusesLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel6, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );
        jPanelAutobusesLayout.setVerticalGroup(
            jPanelAutobusesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanelAutobusesLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel6, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );

        jTabbedPane1.addTab("Autobuses", jPanelAutobuses);

        jPanelPersonasSinAutobus.addComponentListener(new java.awt.event.ComponentAdapter() {
            public void componentShown(java.awt.event.ComponentEvent evt) {
                jPanelPersonasSinAutobusComponentShown(evt);
            }
        });

        jTablePersonasSinAutobus.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Sel.", "Id", "DNI", "Apellidos", "Nombre", "Fecha Nac.", "Tipo", "IdTipo"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Boolean.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class
            };
            boolean[] canEdit = new boolean [] {
                true, false, false, false, false, false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jTablePersonasSinAutobus.setAutoResizeMode(javax.swing.JTable.AUTO_RESIZE_OFF);
        jScrollPane3.setViewportView(jTablePersonasSinAutobus);
        if (jTablePersonasSinAutobus.getColumnModel().getColumnCount() > 0) {
            jTablePersonasSinAutobus.getColumnModel().getColumn(0).setPreferredWidth(30);
            jTablePersonasSinAutobus.getColumnModel().getColumn(1).setPreferredWidth(30);
            jTablePersonasSinAutobus.getColumnModel().getColumn(2).setPreferredWidth(75);
            jTablePersonasSinAutobus.getColumnModel().getColumn(3).setPreferredWidth(150);
            jTablePersonasSinAutobus.getColumnModel().getColumn(4).setPreferredWidth(100);
            jTablePersonasSinAutobus.getColumnModel().getColumn(5).setPreferredWidth(100);
            jTablePersonasSinAutobus.getColumnModel().getColumn(6).setPreferredWidth(100);
            jTablePersonasSinAutobus.getColumnModel().getColumn(7).setResizable(false);
            jTablePersonasSinAutobus.getColumnModel().getColumn(7).setPreferredWidth(0);
        }

        jButton5.setText("Asignar autobus");
        jButton5.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton5ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanelPersonasSinAutobusLayout = new javax.swing.GroupLayout(jPanelPersonasSinAutobus);
        jPanelPersonasSinAutobus.setLayout(jPanelPersonasSinAutobusLayout);
        jPanelPersonasSinAutobusLayout.setHorizontalGroup(
            jPanelPersonasSinAutobusLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanelPersonasSinAutobusLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanelPersonasSinAutobusLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jButton5)
                    .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 703, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(330, Short.MAX_VALUE))
        );
        jPanelPersonasSinAutobusLayout.setVerticalGroup(
            jPanelPersonasSinAutobusLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanelPersonasSinAutobusLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 550, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jButton5)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jTabbedPane1.addTab("Personas sin autobus", jPanelPersonasSinAutobus);

        jPanelHabitaciones.addComponentListener(new java.awt.event.ComponentAdapter() {
            public void componentShown(java.awt.event.ComponentEvent evt) {
                jPanelHabitacionesComponentShown(evt);
            }
        });

        jTableHabitaciones.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null}
            },
            new String [] {
                "Id", "Desc1", "Desc2", "Observaciones", "Camas", "Libres"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Integer.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.Integer.class, java.lang.Integer.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane6.setViewportView(jTableHabitaciones);
        if (jTableHabitaciones.getColumnModel().getColumnCount() > 0) {
            jTableHabitaciones.getColumnModel().getColumn(0).setResizable(false);
            jTableHabitaciones.getColumnModel().getColumn(0).setPreferredWidth(25);
            jTableHabitaciones.getColumnModel().getColumn(1).setPreferredWidth(120);
            jTableHabitaciones.getColumnModel().getColumn(2).setPreferredWidth(120);
            jTableHabitaciones.getColumnModel().getColumn(3).setPreferredWidth(100);
            jTableHabitaciones.getColumnModel().getColumn(4).setResizable(false);
            jTableHabitaciones.getColumnModel().getColumn(4).setPreferredWidth(40);
            jTableHabitaciones.getColumnModel().getColumn(5).setResizable(false);
            jTableHabitaciones.getColumnModel().getColumn(5).setPreferredWidth(40);
        }

        jTablePersonasHabitacion.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Sel", "Id", "DNI", "Apellidos", "Nombre", "Tipo"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Boolean.class, java.lang.String.class, java.lang.Object.class, java.lang.String.class, java.lang.String.class, java.lang.String.class
            };
            boolean[] canEdit = new boolean [] {
                true, false, false, false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane7.setViewportView(jTablePersonasHabitacion);
        if (jTablePersonasHabitacion.getColumnModel().getColumnCount() > 0) {
            jTablePersonasHabitacion.getColumnModel().getColumn(0).setResizable(false);
            jTablePersonasHabitacion.getColumnModel().getColumn(0).setPreferredWidth(30);
            jTablePersonasHabitacion.getColumnModel().getColumn(1).setResizable(false);
            jTablePersonasHabitacion.getColumnModel().getColumn(1).setPreferredWidth(35);
            jTablePersonasHabitacion.getColumnModel().getColumn(2).setResizable(false);
            jTablePersonasHabitacion.getColumnModel().getColumn(2).setPreferredWidth(100);
            jTablePersonasHabitacion.getColumnModel().getColumn(3).setResizable(false);
            jTablePersonasHabitacion.getColumnModel().getColumn(3).setPreferredWidth(165);
            jTablePersonasHabitacion.getColumnModel().getColumn(4).setResizable(false);
            jTablePersonasHabitacion.getColumnModel().getColumn(4).setPreferredWidth(100);
            jTablePersonasHabitacion.getColumnModel().getColumn(5).setResizable(false);
            jTablePersonasHabitacion.getColumnModel().getColumn(5).setPreferredWidth(100);
        }

        jButton6.setText("AÃ±adir persona");
        jButton6.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton6ActionPerformed(evt);
            }
        });

        jButton7.setText("Quitar persona");
        jButton7.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton7ActionPerformed(evt);
            }
        });

        jComboHotel.setModel(GestionHabitacionesBD.getModeloComboHotelesConOpcionTodos());
        jComboHotel.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jComboHotelActionPerformed(evt);
            }
        });

        jLabel5.setText("Filtrar por hotel:");

        javax.swing.GroupLayout jPanelHabitacionesLayout = new javax.swing.GroupLayout(jPanelHabitaciones);
        jPanelHabitaciones.setLayout(jPanelHabitacionesLayout);
        jPanelHabitacionesLayout.setHorizontalGroup(
            jPanelHabitacionesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanelHabitacionesLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanelHabitacionesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane6, javax.swing.GroupLayout.PREFERRED_SIZE, 482, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButton6)
                    .addGroup(jPanelHabitacionesLayout.createSequentialGroup()
                        .addComponent(jLabel5)
                        .addGap(24, 24, 24)
                        .addComponent(jComboHotel, javax.swing.GroupLayout.PREFERRED_SIZE, 295, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(18, 18, 18)
                .addGroup(jPanelHabitacionesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanelHabitacionesLayout.createSequentialGroup()
                        .addComponent(jButton7)
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addComponent(jScrollPane7, javax.swing.GroupLayout.DEFAULT_SIZE, 521, Short.MAX_VALUE))
                .addContainerGap())
        );
        jPanelHabitacionesLayout.setVerticalGroup(
            jPanelHabitacionesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanelHabitacionesLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanelHabitacionesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                    .addComponent(jScrollPane7, javax.swing.GroupLayout.PREFERRED_SIZE, 542, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(jPanelHabitacionesLayout.createSequentialGroup()
                        .addGroup(jPanelHabitacionesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jComboHotel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel5))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jScrollPane6, javax.swing.GroupLayout.PREFERRED_SIZE, 512, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanelHabitacionesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButton6)
                    .addComponent(jButton7))
                .addContainerGap(20, Short.MAX_VALUE))
        );

        jTabbedPane1.addTab("Habitaciones", jPanelHabitaciones);

        jPanelPersonasSinHabitacion.addComponentListener(new java.awt.event.ComponentAdapter() {
            public void componentShown(java.awt.event.ComponentEvent evt) {
                jPanelPersonasSinHabitacionComponentShown(evt);
            }
        });

        jTablePersonasSinHabitacion.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Sel.", "Id", "DNI", "Apellidos", "Nombre", "Fecha Nac.", "Tipo"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Boolean.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class
            };
            boolean[] canEdit = new boolean [] {
                true, false, false, false, false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jTablePersonasSinHabitacion.setAutoResizeMode(javax.swing.JTable.AUTO_RESIZE_OFF);
        jScrollPane9.setViewportView(jTablePersonasSinHabitacion);
        if (jTablePersonasSinHabitacion.getColumnModel().getColumnCount() > 0) {
            jTablePersonasSinHabitacion.getColumnModel().getColumn(0).setPreferredWidth(30);
            jTablePersonasSinHabitacion.getColumnModel().getColumn(1).setPreferredWidth(30);
            jTablePersonasSinHabitacion.getColumnModel().getColumn(2).setPreferredWidth(75);
            jTablePersonasSinHabitacion.getColumnModel().getColumn(3).setPreferredWidth(150);
            jTablePersonasSinHabitacion.getColumnModel().getColumn(4).setPreferredWidth(100);
            jTablePersonasSinHabitacion.getColumnModel().getColumn(5).setPreferredWidth(100);
            jTablePersonasSinHabitacion.getColumnModel().getColumn(6).setPreferredWidth(100);
        }

        jButton8.setText("Asignar habitaciÃ³n");
        jButton8.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton8ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanelPersonasSinHabitacionLayout = new javax.swing.GroupLayout(jPanelPersonasSinHabitacion);
        jPanelPersonasSinHabitacion.setLayout(jPanelPersonasSinHabitacionLayout);
        jPanelPersonasSinHabitacionLayout.setHorizontalGroup(
            jPanelPersonasSinHabitacionLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanelPersonasSinHabitacionLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanelPersonasSinHabitacionLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane9, javax.swing.GroupLayout.PREFERRED_SIZE, 808, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButton8))
                .addContainerGap(225, Short.MAX_VALUE))
        );
        jPanelPersonasSinHabitacionLayout.setVerticalGroup(
            jPanelPersonasSinHabitacionLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanelPersonasSinHabitacionLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane9, javax.swing.GroupLayout.PREFERRED_SIZE, 550, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jButton8)
                .addContainerGap())
        );

        jTabbedPane1.addTab("Personas sin habitaciÃ³n", jPanelPersonasSinHabitacion);

        jButtonCrearPersona.setText("Crear persona");

        jButton2.setText("Autobuses");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        jButton3.setText("Personas");
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });

        comboViaje.setModel(GestionViajesBD.getModeloComboViajes());
        comboViaje.setSelectedIndex(comboViaje.getModel().getSize()-1);
        comboViaje.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                comboViajeActionPerformed(evt);
            }
        });
        comboViaje.addPropertyChangeListener(new java.beans.PropertyChangeListener() {
            public void propertyChange(java.beans.PropertyChangeEvent evt) {
                comboViajePropertyChange(evt);
            }
        });

        jLabel2.setText("PeregrinaciÃ³n");

        jButton9.setText("Crear habitaciÃ³n");
        jButton9.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton9ActionPerformed(evt);
            }
        });

        jButton10.setText("Crear Bus");
        jButton10.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton10ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jTabbedPane1)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel2Layout.createSequentialGroup()
                                .addComponent(jLabel1)
                                .addGap(98, 98, 98)
                                .addComponent(jButtonCrearPersona)
                                .addGap(18, 18, 18)
                                .addComponent(jButton2)
                                .addGap(18, 18, 18)
                                .addComponent(jButton3, javax.swing.GroupLayout.PREFERRED_SIZE, 88, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                                .addGap(17, 17, 17)
                                .addComponent(jLabel2)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(comboViaje, javax.swing.GroupLayout.PREFERRED_SIZE, 443, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGap(18, 18, 18)
                        .addComponent(jButton9)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jButton10, javax.swing.GroupLayout.PREFERRED_SIZE, 116, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel1)
                            .addComponent(jButtonCrearPersona)
                            .addComponent(jButton2)
                            .addComponent(jButton3))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(comboViaje, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel2)))
                    .addComponent(jButton9, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jButton10, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jTabbedPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 638, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGap(0, 0, 0))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void comboTipoViajeroActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_comboTipoViajeroActionPerformed
        System.out.println(new Object() {
        }.getClass().getEnclosingMethod().getName());
        cargaTablaPersonas(true);
    }//GEN-LAST:event_comboTipoViajeroActionPerformed

    private void comboViajePropertyChange(java.beans.PropertyChangeEvent evt) {//GEN-FIRST:event_comboViajePropertyChange

    }//GEN-LAST:event_comboViajePropertyChange

    private void comboViajeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_comboViajeActionPerformed
        System.out.println("Combo peregrinaciones");
        if (jPanelPeregrinaciones.isVisible()) {
            cargaTablaPersonas(true);
        } else if (jPanelAutobuses.isVisible()) {
            cargaTablaAutobuses();
        } else if (jPanelPersonasSinAutobus.isVisible()) {
            cargaTablaPersonasSinAutobus();
        }
    }//GEN-LAST:event_comboViajeActionPerformed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jButton2ActionPerformed

    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed
        //Abrir ventana con lista de personal para poder seleccionar.
        JDialog frame = new JDialog(this, "Gestion de personas", true);
        frame.setDefaultCloseOperation(JDialog.HIDE_ON_CLOSE);
        frame.getContentPane().add(new ListadoPersonas());
        frame.pack();
        frame.setLocationRelativeTo(this);
        frame.setVisible(true);
        //iniciarMisComponentes();
        frame.setVisible(false);
        cargaTablaPersonas(true);
    }//GEN-LAST:event_jButton3ActionPerformed

    private void jButtonEliminaDeLaPeregrinacionActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonEliminaDeLaPeregrinacionActionPerformed
        ArrayList<PersonaBean> lista = new ArrayList<PersonaBean>();
        for (int i = 0; i < jTablePersonas.getRowCount(); i++) {
            if ((boolean) jTablePersonas.getValueAt(i, 0)) {
                PersonaBean persona = new PersonaBean();
                persona.setIdPersona((String) jTablePersonas.getValueAt(i, 1));
                lista.add(persona);
            }
        }
        if (lista.size() < 1) {
            JOptionPane.showMessageDialog(null, "Debe seleccionar al menos una persona");
            return;

        }
        for (PersonaBean persona : lista) {
            GestionViajesBD.eliminaPersonasPeregrinacion(persona.getIdPersona(), filtroViaje);

        }
        cargaTablaPersonas(true);
        prepararVistaPasajerosAutobus();
    }//GEN-LAST:event_jButtonEliminaDeLaPeregrinacionActionPerformed

    private void jTabbedPane1ComponentShown(java.awt.event.ComponentEvent evt) {//GEN-FIRST:event_jTabbedPane1ComponentShown
        System.out.println("PestaÃ±a");        // TODO add your handling code here:
    }//GEN-LAST:event_jTabbedPane1ComponentShown

    private void jPanelAutobusesComponentShown(java.awt.event.ComponentEvent evt) {//GEN-FIRST:event_jPanelAutobusesComponentShown
        System.out.println("PertaÃ±a Autobuses");
        cargaTablaAutobuses();
    }//GEN-LAST:event_jPanelAutobusesComponentShown

    private void jTableAutobusesPropertyChange(java.beans.PropertyChangeEvent evt) {//GEN-FIRST:event_jTableAutobusesPropertyChange

    }//GEN-LAST:event_jTableAutobusesPropertyChange

    private void jPanelPersonasSinAutobusComponentShown(java.awt.event.ComponentEvent evt) {//GEN-FIRST:event_jPanelPersonasSinAutobusComponentShown
        System.out.println("PertaÃ±a 3");
        cargaTablaPersonasSinAutobus();        // TODO add your handling code here:
    }//GEN-LAST:event_jPanelPersonasSinAutobusComponentShown

    private void jPanelPeregrinacionesComponentShown(java.awt.event.ComponentEvent evt) {//GEN-FIRST:event_jPanelPeregrinacionesComponentShown
        System.out.println("PertaÃ±a 1");
        
        
        vaciarTabla((DefaultTableModel) jTableHabitacionesPersona.getModel());
        vaciarTabla((DefaultTableModel) jTableAutobusPersona.getModel());
        cargaTablaPersonas(true);
    }//GEN-LAST:event_jPanelPeregrinacionesComponentShown

    private void jButton5ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton5ActionPerformed
        //Boton asignar autobus de la ventana de personas sin autobus

        ArrayList<PersonaBean> lista = new ArrayList<PersonaBean>();
        for (int i = 0; i < jTablePersonasSinAutobus.getRowCount(); i++) {
            if ((boolean) jTablePersonasSinAutobus.getValueAt(i, 0)) {
                PersonaBean persona = new PersonaBean();
                persona.setIdPersona((String) jTablePersonasSinAutobus.getValueAt(i, 1));
                persona.setIdTipoViajero((String) jTablePersonasSinAutobus.getValueAt(i, 7));
                lista.add(persona);
            }
        }
        if (lista.size() < 1) {
            JOptionPane.showMessageDialog(null, "Debe seleccionar al menos una persona");
            return;

        }
        //kkk
        JDialog frame = new JDialog((JFrame) null, "Guardar", true);
        frame.setDefaultCloseOperation(JDialog.HIDE_ON_CLOSE);
        OpcionesGuardarPersonaAutobusModal ventana = new OpcionesGuardarPersonaAutobusModal();
        frame.getContentPane().add(ventana);
        frame.pack();
        frame.setLocationRelativeTo(this);
        frame.setVisible(true);

        String opcion = ventana.getBoton();
        if ("G".equals(opcion)) {
            AutobusBean autobus=new AutobusBean(ventana.getIdAutobus());
            String result=GestionAutobusesBD.aÃ±adirPasajerosAutobus(lista, autobus.getIdAutobus());
            JOptionPane.showMessageDialog(null, result);
            
        }

        cargaTablaPersonasSinAutobus();
    }//GEN-LAST:event_jButton5ActionPerformed

    private void jButtonAgregaPersonasActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonAgregaPersonasActionPerformed
        filtroViaje = comboViaje.getModel().getElementAt(comboViaje.getSelectedIndex()).split(" - ")[0];
        JDialog frame = new JDialog(this, "Gestion de personas", true);
        frame.setDefaultCloseOperation(JDialog.HIDE_ON_CLOSE);
        ListadoPersonasAsignar ventana = new ListadoPersonasAsignar(filtroViaje, ListadoPersonasAsignar.AsignarAViaje);
        frame.getContentPane().add(ventana);
        frame.pack();
        frame.setLocationRelativeTo(this);
        frame.setVisible(true);
        //iniciarMisComponentes();
        if ("G".equals(ventana.getBoton())) {
            String mensaje = GestionViajesBD.guardaPersonasPeregrinacionUnitaria(ventana.getListaPersonasSelec(), filtroViaje, ventana.getTipoViajero());
            JOptionPane.showMessageDialog(null, mensaje);
            cargaTablaPersonas(true);
        } else {
            return;
        }
    }//GEN-LAST:event_jButtonAgregaPersonasActionPerformed

    /**
     * Boton de aÃ±adir personas al autobus. EstÃ¡ en la pestataÃ±a de autobuses
     * @param evt 
     */
    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        if (jTableAutobuses.getSelectedRow() < 0) {
            JOptionPane.showMessageDialog(null, "Debe seleccionar un autobÃºs");
            return;
        }
        String idAutobus = (String) jTableAutobuses.getModel().getValueAt(jTableAutobuses.getSelectedRow(), 0);
        AutobusBean autobus = new AutobusBean(idAutobus);
        autobus.cargaDatos();
        JDialog frame = new JDialog(this, "Gestion de personas", true);
        frame.setDefaultCloseOperation(JDialog.HIDE_ON_CLOSE);
        ListadoPersonasAsignar ventana = new ListadoPersonasAsignar(autobus.getIdViaje(), ListadoPersonasAsignar.AsignarABus);
        frame.getContentPane().add(ventana);
        frame.pack();
        frame.setLocationRelativeTo(this);
        frame.setVisible(true);
        //iniciarMisComponentes();
        if ("G".equals(ventana.getBoton())) {
            //kkk
            String mensaje = GestionAutobusesBD.aÃ±adirPasajerosAutobus(ventana.getListaPersonasSelec(), idAutobus);
            JOptionPane.showMessageDialog(null, mensaje);
            //cargarTablaPasajeros(idAutobus);
            int sel = jTableAutobuses.getSelectedRow();
            cargaTablaAutobuses();
            jTableAutobuses.setRowSelectionInterval(sel, sel);
        } else {
            return;
        }
    }//GEN-LAST:event_jButton1ActionPerformed

    private void jButton4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton4ActionPerformed
        // Quitar persona del autobus
        indiceSelJTableAutobuses=jTableAutobuses.getSelectedRow();
        ArrayList<PersonaBean> lista = new ArrayList<PersonaBean>();
        for (int i = 0; i < jTablePersonasBus.getRowCount(); i++) {
            if ((boolean) jTablePersonasBus.getValueAt(i, 0)) {
                PersonaBean persona = new PersonaBean();
                persona.setIdPersona((String) jTablePersonasBus.getValueAt(i, 1));
                lista.add(persona);
            }
        }
        if (lista.size() < 1) {
            JOptionPane.showMessageDialog(null, "Debe seleccionar al menos una persona");
            return;

        }
        for (PersonaBean persona : lista) {
            GestionAutobusesBD.eliminaPersonasAutobus(persona.getIdPersona(), filtroViaje);
        }
        //cargaTablaPersonas(true);
        
        cargaTablaAutobuses();
        jTableAutobuses.setRowSelectionInterval(indiceSelJTableAutobuses, indiceSelJTableAutobuses);
    }//GEN-LAST:event_jButton4ActionPerformed

    private void jPanelHabitacionesComponentShown(java.awt.event.ComponentEvent evt) {//GEN-FIRST:event_jPanelHabitacionesComponentShown
        System.out.println("PestaÃ±a habitaciones");        // TODO add your handling code here:
        cargaTablaHabitaciones();
    }//GEN-LAST:event_jPanelHabitacionesComponentShown

    /**
     * Boton de aÃ±adir personas a la habitacion
     * @param evt 
     */
    private void jButton6ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton6ActionPerformed
        if (jTableHabitaciones.getSelectedRow() < 0) {
            JOptionPane.showMessageDialog(null, "Debe seleccionar una habitaciÃ³n");
            return;
        }
        String idHabitacion = (String) jTableHabitaciones.getModel().getValueAt(jTableHabitaciones.getSelectedRow(), 0);
        HabitacionBean habitacion = new HabitacionBean(idHabitacion);
        habitacion.cargaDatos();
        JDialog frame = new JDialog(this, "Gestion de personas", true);
        frame.setDefaultCloseOperation(JDialog.HIDE_ON_CLOSE);
        ListadoPersonasAsignar ventana = new ListadoPersonasAsignar(habitacion.getIdViaje(), ListadoPersonasAsignar.AsignarAHabitacion);
        frame.getContentPane().add(ventana);
        frame.pack();
        frame.setLocationRelativeTo(this);
        frame.setVisible(true);
        //iniciarMisComponentes();
        if ("G".equals(ventana.getBoton())) {
            String mensaje = GestionHabitacionesBD.aÃ±adirHuespedHabitacion(ventana.getListaPersonasSelec(), idHabitacion);
            JOptionPane.showMessageDialog(null, mensaje);
            //cargarTablaPasajeros(idAutobus);
            int sel = jTableHabitaciones.getSelectedRow();
            cargaTablaHabitaciones();
            jTableHabitaciones.setRowSelectionInterval(sel, sel);
        } else {
            return;
        }
    }//GEN-LAST:event_jButton6ActionPerformed

    private void jPanelPersonasSinHabitacionComponentShown(java.awt.event.ComponentEvent evt) {//GEN-FIRST:event_jPanelPersonasSinHabitacionComponentShown
        System.out.println("PertaÃ±a Personas sin habitaciones");
        cargaTablaPersonasSinHabitacion();
    }//GEN-LAST:event_jPanelPersonasSinHabitacionComponentShown

    private void jButton8ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton8ActionPerformed
        //Boton de aÃ±adir a habitacion de la ventana de personas que no tienen habitacion
        ArrayList<PersonaBean> lista = new ArrayList<PersonaBean>();
        for (int i = 0; i < jTablePersonasSinHabitacion.getRowCount(); i++) {
            if ((boolean) jTablePersonasSinHabitacion.getValueAt(i, 0)) {
                PersonaBean persona = new PersonaBean();
                persona.setIdPersona((String) jTablePersonasSinHabitacion.getValueAt(i, 1));
                lista.add(persona);
            }
        }
        if (lista.size() < 1) {
            JOptionPane.showMessageDialog(null, "Debe seleccionar al menos una persona");
            return;

        }
        JDialog frame = new JDialog((JFrame) null, "Guardar", true);
        frame.setDefaultCloseOperation(JDialog.HIDE_ON_CLOSE);
        OpcionesGuardarPersonaHabitacionModal ventana = new OpcionesGuardarPersonaHabitacionModal();
        frame.getContentPane().add(ventana);
        frame.pack();
        frame.setLocationRelativeTo(this);
        frame.setVisible(true);

        String opcion = ventana.getBoton();
        if ("G".equals(opcion)) {
            HabitacionBean habitacion=new HabitacionBean(ventana.getIdHabitacion());
            int plazasLibre = habitacion.getCamasLibres();
            if (plazasLibre <= 0) {
                JOptionPane.showMessageDialog(null, "La habitaciÃ³n seleccionada no tiene plazas libres");
                return;
            } else if (plazasLibre < lista.size()) {
                JOptionPane.showMessageDialog(null, "La habitaciÃ³n seleccionada no tiene suficientes camas libres");
                return;
            } else {
                for (PersonaBean persona : lista) {
                    GestionHabitacionesBD.setHuespedHabitacion(ventana.getIdHabitacion(), persona.getIdPersona());
                }
            }
        }

        cargaTablaPersonasSinHabitacion();
        
    }//GEN-LAST:event_jButton8ActionPerformed

    int indiceSelJTableHabitaciones;
    private void jButton7ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton7ActionPerformed
        //quitar persona de habitacion
        indiceSelJTableHabitaciones=jTableHabitaciones.getSelectedRow();
        ArrayList<PersonaBean> lista = new ArrayList<PersonaBean>();
        for (int i = 0; i < jTablePersonasHabitacion.getRowCount(); i++) {
            if ((boolean) jTablePersonasHabitacion.getValueAt(i, 0)) {
                PersonaBean persona = new PersonaBean();
                persona.setIdPersona((String) jTablePersonasHabitacion.getValueAt(i, 1));
                lista.add(persona);
            }
        }
        if (lista.size() < 1) {
            JOptionPane.showMessageDialog(null, "Debe seleccionar al menos una persona");
            return;

        }
        for (PersonaBean persona : lista) {
            GestionHabitacionesBD.eliminaPersonasHabitacion(persona.getIdPersona(), filtroViaje);
        }
        //cargaTablaPersonas(true);
        
        cargaTablaHabitaciones();
        jTableHabitaciones.setRowSelectionInterval(indiceSelJTableHabitaciones, indiceSelJTableHabitaciones);
    }//GEN-LAST:event_jButton7ActionPerformed

    private void jButton9ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton9ActionPerformed
        filtroViaje = comboViaje.getModel().getElementAt(comboViaje.getSelectedIndex()).split(" - ")[0];
        JDialog frame = new JDialog(this, "Gestion de habitaciones", true);
        frame.setDefaultCloseOperation(JDialog.HIDE_ON_CLOSE);
        HabitacionesMtto ventana = new HabitacionesMtto(HabitacionesMtto.nuevo, filtroViaje, comboViaje.getSelectedIndex(), this, ""+0);
        frame.getContentPane().add(ventana);
        frame.pack();
        frame.setLocationRelativeTo(this);
        frame.setVisible(true);
        
    }//GEN-LAST:event_jButton9ActionPerformed

    private void jComboHotelActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jComboHotelActionPerformed
        cargaTablaHabitaciones();
        
    }//GEN-LAST:event_jComboHotelActionPerformed

    private void jButton10ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton10ActionPerformed
        filtroViaje = comboViaje.getModel().getElementAt(comboViaje.getSelectedIndex()).split(" - ")[0];
        JDialog frame = new JDialog(this, "Gestion de autobuses", true);
        frame.setDefaultCloseOperation(JDialog.HIDE_ON_CLOSE);
        AutobusesMtto ventana = new AutobusesMtto(AutobusesMtto.nuevo, filtroViaje, comboViaje.getSelectedIndex(), this, ""+0);
        frame.getContentPane().add(ventana);
        frame.pack();
        frame.setLocationRelativeTo(this);
        frame.setVisible(true);
    }//GEN-LAST:event_jButton10ActionPerformed

    /**
     * Listener para hacer que al seleccionar una habitacion se muestre la tabla con las persona que ya hay asignadas a la habitacion
     */
    private void ponListenerTablaHabitaciones() {
        JFrame padre=this;
        jTableHabitaciones.getSelectionModel().addListSelectionListener(new ListSelectionListener() {
            @Override
            public void valueChanged(ListSelectionEvent evento) {
                ListSelectionModel lsm = (ListSelectionModel) evento.getSource();
                int indice = lsm.getMinSelectionIndex();
                if (indice != -1) {
                    String idHabitacion = (String) jTableHabitaciones.getModel().getValueAt(indice, 0);
                    cargaTablaHuespedes(idHabitacion);
                }
            }
        });
        jTableHabitaciones.addMouseListener(new MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent e) {
                if (e.getClickCount() == 2) {
                    System.out.println("Se ha hecho doble click");
                    
                    String idHabitacion=(String)jTableHabitaciones.getModel().getValueAt(jTableHabitaciones.getSelectedRow(),0);
                    String idHotel = jComboHotel.getModel().getElementAt(jComboHotel.getSelectedIndex()).split(" - ")[0];
                    filtroViaje = comboViaje.getModel().getElementAt(comboViaje.getSelectedIndex()).split(" - ")[0];
                    //System.out.println("Id: "+id);
                    
                    JDialog frame = new JDialog(padre, "Gestion de habitaciones", true);
                    frame.setDefaultCloseOperation(JDialog.HIDE_ON_CLOSE);
                    frame.getContentPane().add(new HabitacionesMtto(HabitacionesMtto.mtto,filtroViaje, comboViaje.getSelectedIndex(), (Principal) padre, idHabitacion));
                    frame.pack();
                    frame.setLocationRelativeTo(padre);
                    frame.setVisible(true);
                    int sel=jTablePersonas.getSelectedRow();
                    cargaTablaPersonas(true);
                    //jTablePersonas.setRowSelectionInterval(sel, sel);
                }
            }
        });
    }
    
    int indiceSelJTableAutobuses;
    private void ponListenerTablaAutobuses() {
        jTableAutobuses.getSelectionModel().addListSelectionListener(new ListSelectionListener() {
            @Override
            public void valueChanged(ListSelectionEvent evento) {
                ListSelectionModel lsm = (ListSelectionModel) evento.getSource();
                int indice = lsm.getMinSelectionIndex();
                
                System.out.println("Indice seleccionado de jTableAutobuses: "+indiceSelJTableAutobuses);
                if (indice != -1) {
                    String idAutobus = (String) jTableAutobuses.getModel().getValueAt(indice, 0);
                    cargaTablaPasajeros(idAutobus);
                }
            }
        });
        JFrame padre=this;
        jTableAutobuses.addMouseListener(new MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent e) {
                if (e.getClickCount() == 1) {
                    String idPersona=(String)jTablePersonas.getModel().getValueAt(jTableAutobuses.getSelectedRow(),1);
                    cargarDatosAutobus(idPersona,filtroViaje);
                    cargarDatosHabitaciones(idPersona,filtroViaje);
                    System.out.println("Se ha hecho un click");
                }
                if (e.getClickCount() == 2) {
                    System.out.println("Se ha hecho doble click");
                    String id=(String)jTablePersonas.getModel().getValueAt(jTableAutobuses.getSelectedRow(),1);
                    System.out.println("Id: "+id);
                    
                    JDialog frame = new JDialog(padre, "Gestion de personas", true);
                    frame.setDefaultCloseOperation(JDialog.HIDE_ON_CLOSE);
                    frame.getContentPane().add(new OpcionesDePersona(OpcionesDePersona.mtto, id));
                    frame.pack();
                    frame.setLocationRelativeTo(padre);
                    frame.setVisible(true);
                    int sel=jTablePersonas.getSelectedRow();
                    cargaTablaPersonas(true);
                    jTablePersonas.setRowSelectionInterval(sel, sel);
                }
            }
        });
    }

    private void ponListenerTablaParsonas() {
        JFrame padre=this;
        jTablePersonas.addMouseListener(new MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent e) {
                if (e.getClickCount() == 1) {
                    String idPersona=(String)jTablePersonas.getModel().getValueAt(jTablePersonas.getSelectedRow(),1);
                    cargarDatosAutobus(idPersona,filtroViaje);
                    cargarDatosHabitaciones(idPersona,filtroViaje);
                    System.out.println("Se ha hecho un click");
                }
                if (e.getClickCount() == 2) {
                    System.out.println("Se ha hecho doble click");
                    String id=(String)jTablePersonas.getModel().getValueAt(jTablePersonas.getSelectedRow(),1);
                    System.out.println("Id: "+id);
                    
                    JDialog frame = new JDialog(padre, "Gestion de personas", true);
                    frame.setDefaultCloseOperation(JDialog.HIDE_ON_CLOSE);
                    frame.getContentPane().add(new OpcionesDePersona(OpcionesDePersona.mtto, id));
                    frame.pack();
                    frame.setLocationRelativeTo(padre);
                    frame.setVisible(true);
                    int sel=jTablePersonas.getSelectedRow();
                    cargaTablaPersonas(true);
                    jTablePersonas.setRowSelectionInterval(sel, sel);
                }
            }
        });
    }
    
    
    
    private void cargarDatosAutobus(String idPersona, String filtroViaje) {
        System.out.println(new Object() {}.getClass().getEnclosingMethod().getName());
        
        DefaultTableModel datosTabla = (DefaultTableModel) jTableAutobusPersona.getModel();
        for (int i = datosTabla.getRowCount(); i > 0; i--) {
            datosTabla.removeRow(i - 1);
        }
        AutobusBean autobus = GestionAutobusesBD.getDatosAutobus(idPersona, filtroViaje);
        if(autobus==null){
            //jLabelDescripcionAutobus.setVisible(true);
            jLabelDescripcionAutobus.setText("Sin autobus asignado");
            jLabelDescripcionAutobus.setForeground(Color.red);
            jLabelObservaciones.setText(" ");
            jLabelIdAutobusEtiqueta.setVisible(false);
            jLabelIdAutobus.setText(" ");
            //jTableAutobusPersona.setVisible(false);
            return;
            
        }else{
            jLabelDescripcionAutobus.setForeground(Color.BLACK);
            jTableAutobusPersona.setVisible(true);
            jLabelDescripcionAutobus.setVisible(true);
            jLabelDescripcionAutobus.setText(autobus.getDescripcion());
            jLabelObservaciones.setText(autobus.getObservaciones());
            jLabelObservaciones.setVisible(true);
            jLabelIdAutobus.setText(autobus.getIdAutobus());
            jLabelIdAutobus.setVisible(true);
            jLabelIdAutobusEtiqueta.setVisible(true);
        }
        ArrayList<PersonaBean> listaPersonas = autobus.getPasajeros();
        //ArrayList<PersonaBean> listaPersonas = autobus.getPasajeros();
        
        
        for (PersonaBean persona : listaPersonas) {
            datosTabla.addRow(new Object[]{
                "" + persona.getIdPersona(),
                persona.getDNI(),
                persona.getApellidos(),
                persona.getNombre(),
                persona.getFechaNacimiento()//,
            //GestionTiposViajeroBD.getTipoViajero(autobus.getIdViaje(), persona.getIdPersona()).getNombreTipo()
            });
        }
    }
    /**
     * Carga la tabla de personas de una habitacion de la pantalla de peregrinacion
     * @param idPersona
     * @param filtroViaje 
     */
    private void cargarDatosHabitaciones(String idPersona, String filtroViaje) {
        System.out.println(new Object() {}.getClass().getEnclosingMethod().getName());
        
        DefaultTableModel datosTabla = (DefaultTableModel) jTableHabitacionesPersona.getModel();
        for (int i = datosTabla.getRowCount(); i > 0; i--) {
            datosTabla.removeRow(i - 1);
        }
        HabitacionBean habitacion = GestionHabitacionesBD.getDatosHabitacion(idPersona, filtroViaje);
        if(habitacion==null){
            //jLabelDescripcionAutobus.setVisible(true);
            jLabelDesc1.setText("Sin habitaciÃ³n asignada");
            jLabelDesc1.setForeground(Color.red);
            jLabelDesc2.setText(" ");
            jLabelObser.setText(" ");
            jLabelCamasLibres.setText(" ");
            //jTableAutobusPersona.setVisible(false);
            return;
            
        }else{
            jLabelDesc1.setForeground(Color.BLACK);
            jLabelDesc1.setVisible(true);
            jLabelDesc1.setText(habitacion.getDescripcion1());
            jLabelObser.setText(habitacion.getObservaciones());
            jLabelDesc2.setText(habitacion.getDescripcion2());
            jLabelCamasLibres.setText("Camas libres: "+habitacion.getCamasLibres());
        }
        ArrayList<PersonaBean> listaPersonas = habitacion.getHuespedes();
        //ArrayList<PersonaBean> listaPersonas = autobus.getPasajeros();
        
        
        for (PersonaBean persona : listaPersonas) {
            datosTabla.addRow(new Object[]{
                "" + persona.getIdPersona(),
                persona.getDNI(),
                persona.getApellidos(),
                persona.getNombre(),
                persona.getFechaNacimiento()//,
            //GestionTiposViajeroBD.getTipoViajero(autobus.getIdViaje(), persona.getIdPersona()).getNombreTipo()
            });
        }
    }
    
    
    private void cargaTablaPasajeros(String idAutobus) {
        System.out.println(new Object() {
        }.getClass().getEnclosingMethod().getName());
        AutobusBean autobus = new AutobusBean();
        autobus.setIdAutobus(idAutobus);
        autobus.cargaDatos();
        ArrayList<PersonaBean> listaPersonas = autobus.getPasajeros();
        DefaultTableModel datosTabla = (DefaultTableModel) jTablePersonasBus.getModel();
        for (int i = datosTabla.getRowCount(); i > 0; i--) {
            datosTabla.removeRow(i - 1);
        }
        for (PersonaBean persona : listaPersonas) {
            datosTabla.addRow(new Object[]{
                false,
                "" + persona.getIdPersona(),
                persona.getDNI(),
                persona.getApellidos(),
                persona.getNombre(),
                GestionTiposViajeroBD.getTipoViajero(autobus.getIdViaje(),autobus.getIdViaje(),
                persona.getIdPersona()).getNombreTipo()
            });
        }
    }
    
    private void cargaTablaHuespedes(String idHabitacion) {
        System.out.println(new Object() {
        }.getClass().getEnclosingMethod().getName());
        HabitacionBean habitacion = new HabitacionBean();
        habitacion.setIdHabitacion(idHabitacion);
        habitacion.cargaDatos();
        ArrayList<PersonaBean> listaPersonas = habitacion.getHuespedes();
        DefaultTableModel datosTabla = (DefaultTableModel) jTablePersonasHabitacion.getModel();
        for (int i = datosTabla.getRowCount(); i > 0; i--) {
            datosTabla.removeRow(i - 1);
        }
        for (PersonaBean persona : listaPersonas) {
            datosTabla.addRow(new Object[]{
                false,
                "" + persona.getIdPersona(),
                persona.getDNI(),
                persona.getApellidos(),
                persona.getNombre(),
                GestionTiposViajeroBD.getTipoViajero(habitacion.getIdViaje(), habitacion.getIdViaje(), persona.getIdPersona()).getNombreTipo()
            });
        }
    }

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Principal.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Principal.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Principal.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Principal.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Principal().setVisible(true);

            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JComboBox<String> comboTipoViajero;
    private javax.swing.JComboBox<String> comboViaje;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton10;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton3;
    private javax.swing.JButton jButton4;
    private javax.swing.JButton jButton5;
    private javax.swing.JButton jButton6;
    private javax.swing.JButton jButton7;
    private javax.swing.JButton jButton8;
    private javax.swing.JButton jButton9;
    private javax.swing.JButton jButtonAgregaPersonas;
    private javax.swing.JButton jButtonCrearPersona;
    private javax.swing.JButton jButtonEliminaDeLaPeregrinacion;
    private javax.swing.JComboBox<String> jComboHotel;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabelCamasLibres;
    private javax.swing.JLabel jLabelDesc1;
    private javax.swing.JLabel jLabelDesc2;
    private javax.swing.JLabel jLabelDescripcionAutobus;
    private javax.swing.JLabel jLabelIdAutobus;
    private javax.swing.JLabel jLabelIdAutobusEtiqueta;
    private javax.swing.JLabel jLabelObser;
    private javax.swing.JLabel jLabelObservaciones;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel5;
    private javax.swing.JPanel jPanel6;
    private javax.swing.JPanel jPanelAutobuses;
    private javax.swing.JPanel jPanelHabitaciones;
    private javax.swing.JPanel jPanelPeregrinaciones;
    private javax.swing.JPanel jPanelPersonasSinAutobus;
    private javax.swing.JPanel jPanelPersonasSinHabitacion;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane10;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JScrollPane jScrollPane4;
    private javax.swing.JScrollPane jScrollPane5;
    private javax.swing.JScrollPane jScrollPane6;
    private javax.swing.JScrollPane jScrollPane7;
    private javax.swing.JScrollPane jScrollPane9;
    private javax.swing.JTabbedPane jTabbedPane1;
    private javax.swing.JTable jTableAutobusPersona;
    private javax.swing.JTable jTableAutobuses;
    private javax.swing.JTable jTableHabitaciones;
    private javax.swing.JTable jTableHabitacionesPersona;
    private javax.swing.JTable jTablePersonas;
    private javax.swing.JTable jTablePersonasBus;
    private javax.swing.JTable jTablePersonasHabitacion;
    private javax.swing.JTable jTablePersonasSinAutobus;
    private javax.swing.JTable jTablePersonasSinHabitacion;
    private javax.swing.JLabel labelTotal;
    // End of variables declaration//GEN-END:variables

    private void cargaTablaPersonas(boolean tipo) {
        System.out.println(new Object() {
        }.getClass().getEnclosingMethod().getName());
        filtroViaje = comboViaje.getModel().getElementAt(comboViaje.getSelectedIndex()).split(" - ")[0];
        filtroTipoViajero = comboTipoViajero.getModel().getElementAt(comboTipoViajero.getSelectedIndex()).split(" - ")[0];
        listaPersonas = GestionPersonasBD.getListaPersonas(tipo, filtroViaje, filtroTipoViajero);
        DefaultTableModel datosTabla = (DefaultTableModel) jTablePersonas.getModel();
        for (int i = datosTabla.getRowCount(); i > 0; i--) {
            datosTabla.removeRow(i - 1);
        }
        for (PersonaBean persona : listaPersonas) {
            datosTabla.addRow(new Object[]{
                false,
                "" + persona.getIdPersona(),
                persona.getDNI(),
                persona.getApellidos(),
                persona.getNombre(),
                persona.getFechaNacimiento(),
                GestionTiposViajeroBD.getTipoViajero(filtroViaje,filtroViaje, persona.getIdPersona()).getNombreTipo()
            });
        }
        labelTotal.setText(""+listaPersonas.size());
    }

    private void cargaTablaAutobuses() {
        System.out.println(new Object() {
        }.getClass().getEnclosingMethod().getName());
        DefaultTableModel datosTabla = (DefaultTableModel) jTablePersonasBus.getModel();
        for (int i = datosTabla.getRowCount(); i > 0; i--) {
            datosTabla.removeRow(i - 1);
        }

        filtroViaje = comboViaje.getModel().getElementAt(comboViaje.getSelectedIndex()).split(" - ")[0];
        filtroTipoViajero = comboTipoViajero.getModel().getElementAt(comboTipoViajero.getSelectedIndex()).split(" - ")[0];
        listaAutobuses = GestionAutobusesBD.getListaAutobuses(filtroViaje);
        datosTabla = (DefaultTableModel) jTableAutobuses.getModel();
        for (int i = datosTabla.getRowCount(); i > 0; i--) {
            datosTabla.removeRow(i - 1);
        }
        for (AutobusBean autobus : listaAutobuses) {
            datosTabla.addRow(new Object[]{
                autobus.getIdAutobus(),
                autobus.getDescripcion(),
                autobus.getObservaciones(),
                autobus.getPlazasLibres(true),
                autobus.getPlazasLibres(false),
                autobus.getIdAutobus()
            });
        }
    }
    /**
     * Carga la tabla de habitacion y borra la table de personas de la habitacion
     * @param idHotel Si el id es 0 mostrarÃ¡ todos los hoteles
     */
    public void cargaTablaHabitaciones() {
        System.out.println(new Object() {
        }.getClass().getEnclosingMethod().getName());
        
        DefaultTableModel datosTabla = (DefaultTableModel) jTableHabitacionesPersona.getModel();
        for (int i = datosTabla.getRowCount(); i > 0; i--) {
            datosTabla.removeRow(i - 1);
        }
        String idHotel = jComboHotel.getModel().getElementAt(jComboHotel.getSelectedIndex()).split(" - ")[0];
        filtroViaje = comboViaje.getModel().getElementAt(comboViaje.getSelectedIndex()).split(" - ")[0];
        //filtroTipoViajero = comboTipoViajero.getModel().getElementAt(comboTipoViajero.getSelectedIndex()).split(" - ")[0];
        listaHabitaciones = GestionHabitacionesBD.getListaHabitaciones(filtroViaje, idHotel);
        datosTabla = (DefaultTableModel) jTableHabitaciones.getModel();
        for (int i = datosTabla.getRowCount(); i > 0; i--) {
            datosTabla.removeRow(i - 1);
        }
        for (HabitacionBean habitacion : listaHabitaciones) {
            datosTabla.addRow(new Object[]{
                habitacion.getIdHabitacion(),
                habitacion.getDescripcion1(),
                habitacion.getDescripcion2(),
                habitacion.getObservaciones(),
                habitacion.getCamasTotales(),
                habitacion.getCamasLibres()
            });
        }
    }

    private void cargaTablaPersonasSinAutobus() {
        System.out.println(new Object() {
        }.getClass().getEnclosingMethod().getName());
        filtroViaje = comboViaje.getModel().getElementAt(comboViaje.getSelectedIndex()).split(" - ")[0];
        listaPersonas = GestionPersonasBD.getListaPersonasSinAutobus(filtroViaje, "0");
        DefaultTableModel datosTabla = (DefaultTableModel) jTablePersonasSinAutobus.getModel();
        for (int i = datosTabla.getRowCount(); i > 0; i--) {
            datosTabla.removeRow(i - 1);
        }
        for (PersonaBean persona : listaPersonas) {
            datosTabla.addRow(new Object[]{
                false,
                "" + persona.getIdPersona(),
                persona.getDNI(),
                persona.getApellidos(),
                persona.getNombre(),
                persona.getFechaNacimiento(),
                //GestionTiposViajeroBD.getTipoViajero(filtroViaje,filtroViaje, persona.getIdPersona()).getNombreTipo()
                persona.getNombreCortoTipoViajero(),
                persona.getIdTipoViajero()
            });
        }
    }

    private void cargaTablaPersonasSinHabitacion() {
        System.out.println(new Object() {
        }.getClass().getEnclosingMethod().getName());
        filtroViaje = comboViaje.getModel().getElementAt(comboViaje.getSelectedIndex()).split(" - ")[0];
        listaPersonas = GestionPersonasBD.getListaPersonasSinHabitacion(filtroViaje,"0");
        DefaultTableModel datosTabla = (DefaultTableModel) jTablePersonasSinHabitacion.getModel();
        for (int i = datosTabla.getRowCount(); i > 0; i--) {
            datosTabla.removeRow(i - 1);
        }
        for (PersonaBean persona : listaPersonas) {
            datosTabla.addRow(new Object[]{
                false,
                "" + persona.getIdPersona(),
                persona.getDNI(),
                persona.getApellidos(),
                persona.getNombre(),
                persona.getFechaNacimiento(),
                GestionTiposViajeroBD.getTipoViajero(filtroViaje,filtroViaje, persona.getIdPersona()).getNombreTipo()
            });
        }
    }
    
    
    private void prepararVistaPasajerosAutobus() {
        jPanel3.setPreferredSize(new Dimension(406, 323));
        jLabelDescripcionAutobus.setText(" ");
        jLabelObservaciones.setText(" ");
        jLabelIdAutobusEtiqueta.setVisible(false);
        jLabelIdAutobus.setText(" ");
        //jTableAutobusPersona.setText("");
        DefaultTableModel datosTabla = (DefaultTableModel) jTableAutobusPersona.getModel();
        for (int i = datosTabla.getRowCount(); i > 0; i--) {
            datosTabla.removeRow(i - 1);
        }
    }

    private void vaciarTabla(DefaultTableModel model) {
        for (int i = model.getRowCount(); i > 0; i--) {
            model.removeRow(i - 1);
        }
    }

}
