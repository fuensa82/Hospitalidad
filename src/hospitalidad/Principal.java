/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package hospitalidad;

import hospitalidad.Gestores.GestionAutobusesBD;
import hospitalidad.Gestores.GestionHabitacionesBD;
import hospitalidad.Gestores.GestionPersonasBD;
import hospitalidad.Gestores.GestionViajesBD;
import hospitalidad.Gestores.GestionTiposViajeroBD;
import hospitalidad.beans.AutobusBean;
import hospitalidad.beans.HabitacionBean;
import hospitalidad.beans.PersonaBean;
import java.awt.Color;
import java.awt.Dimension;
import java.awt.Toolkit;
import java.awt.datatransfer.Clipboard;
import java.awt.datatransfer.StringSelection;
import java.awt.event.MouseAdapter;
import java.util.ArrayList;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JDialog;
import javax.swing.JFrame;
import javax.swing.JOptionPane;
import javax.swing.ListSelectionModel;
import javax.swing.UIManager;
import javax.swing.UnsupportedLookAndFeelException;
import javax.swing.event.ListSelectionEvent;
import javax.swing.event.ListSelectionListener;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author vPalomo
 */
public class Principal extends javax.swing.JFrame {

    private ArrayList<PersonaBean> listaPersonas;
    //private ArrayList<PersonaBean> listaPersonasSinAutobus;
    private ArrayList<AutobusBean> listaAutobuses;
    private ArrayList<HabitacionBean> listaHabitaciones;
    private String filtroViaje;
    private String filtroTipoViajero;

    /**
     * Creates new form Principal
     */
    public Principal() {
        try {
            UIManager.setLookAndFeel("com.sun.java.swing.plaf.windows.WindowsLookAndFeel");
        } catch (ClassNotFoundException ex) {
            Logger.getLogger(Principal.class.getName()).log(Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            Logger.getLogger(Principal.class.getName()).log(Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            Logger.getLogger(Principal.class.getName()).log(Level.SEVERE, null, ex);
        } catch (UnsupportedLookAndFeelException ex) {
            Logger.getLogger(Principal.class.getName()).log(Level.SEVERE, null, ex);
        }
        initComponents();
        //ponListenerTablaHabitaciones();
        ponListenerTablaAutobuses();
        ponListenerTablaParsonas();
        ponListenerTablaHabitaciones();
        ponListenerTablaNumeroPeregrinaciones();
        cargaTablaPersonas(true);
        prepararVistaPasajerosAutobus();

    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel2 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jTabbedPane1 = new javax.swing.JTabbedPane();
        jPanelPeregrinaciones = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTablePersonas = new javax.swing.JTable();
        jPanel3 = new javax.swing.JPanel();
        jLabelIdAutobusEtiqueta = new javax.swing.JLabel();
        jLabelDescripcionAutobus = new javax.swing.JLabel();
        jLabelObservaciones = new javax.swing.JLabel();
        jLabelIdAutobus = new javax.swing.JLabel();
        jScrollPane5 = new javax.swing.JScrollPane();
        jTableAutobusPersona = new javax.swing.JTable();
        jPanel5 = new javax.swing.JPanel();
        jLabelDesc1 = new javax.swing.JLabel();
        jLabelDesc2 = new javax.swing.JLabel();
        jScrollPane10 = new javax.swing.JScrollPane();
        jTableHabitacionesPersona = new javax.swing.JTable();
        jLabelObser = new javax.swing.JLabel();
        jLabelCamasLibres = new javax.swing.JLabel();
        jButtonEliminaDeLaPeregrinacion = new javax.swing.JButton();
        jButtonAgregaPersonas = new javax.swing.JButton();
        jLabel4 = new javax.swing.JLabel();
        labelTotal = new javax.swing.JLabel();
        comboTipoViajero = new javax.swing.JComboBox<>();
        jLabel3 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        jTextFiltro = new javax.swing.JTextField();
        jButton2 = new javax.swing.JButton();
        jButton12 = new javax.swing.JButton();
        jButton14 = new javax.swing.JButton();
        jButton15 = new javax.swing.JButton();
        jPanelPersonasSinAutobus = new javax.swing.JPanel();
        jScrollPane3 = new javax.swing.JScrollPane();
        jTablePersonasSinAutobus = new javax.swing.JTable();
        jButton5 = new javax.swing.JButton();
        jLabel8 = new javax.swing.JLabel();
        jLabelTotalListaPersonasSinBus = new javax.swing.JLabel();
        jPanelAutobuses = new javax.swing.JPanel();
        jScrollPane2 = new javax.swing.JScrollPane();
        jTableAutobuses = new javax.swing.JTable();
        jScrollPane4 = new javax.swing.JScrollPane();
        jTablePersonasBus = new javax.swing.JTable();
        jButton1 = new javax.swing.JButton();
        jButton4 = new javax.swing.JButton();
        jLabel9 = new javax.swing.JLabel();
        jLabelTotalBuses = new javax.swing.JLabel();
        jLabel12 = new javax.swing.JLabel();
        jLabelTotalPersonasAutobus = new javax.swing.JLabel();
        jPanelPersonasSinHabitacion = new javax.swing.JPanel();
        jScrollPane9 = new javax.swing.JScrollPane();
        jTablePersonasSinHabitacion = new javax.swing.JTable();
        jButton8 = new javax.swing.JButton();
        jLabel10 = new javax.swing.JLabel();
        jLabelTotalPersonasSinHab = new javax.swing.JLabel();
        jPanelHabitaciones = new javax.swing.JPanel();
        jScrollPane6 = new javax.swing.JScrollPane();
        jTableHabitaciones = new javax.swing.JTable();
        jScrollPane7 = new javax.swing.JScrollPane();
        jTablePersonasHabitacion = new javax.swing.JTable();
        jButton6 = new javax.swing.JButton();
        jButton7 = new javax.swing.JButton();
        jComboHotel = new javax.swing.JComboBox<>();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jLabel11 = new javax.swing.JLabel();
        jLabelTotalHabitaciones = new javax.swing.JLabel();
        jPanelListadoTotal = new javax.swing.JPanel();
        jScrollPane8 = new javax.swing.JScrollPane();
        jTableListadoTotal = new javax.swing.JTable();
        jLabel13 = new javax.swing.JLabel();
        jLabel14 = new javax.swing.JLabel();
        jLabelListadoTotal = new javax.swing.JLabel();
        jButton13 = new javax.swing.JButton();
        jComboEquipoListadoTotal = new javax.swing.JComboBox<>();
        jLabel15 = new javax.swing.JLabel();
        jLabel16 = new javax.swing.JLabel();
        jLabel17 = new javax.swing.JLabel();
        jComboAutobusesListadoTotal = new javax.swing.JComboBox<>();
        jComboHotelesListadoTotal = new javax.swing.JComboBox<>();
        jPanel1 = new javax.swing.JPanel();
        jScrollPane11 = new javax.swing.JScrollPane();
        jTableNumeroPeregrinaciones = new javax.swing.JTable();
        jTextNumPeregriAnt2022 = new javax.swing.JTextField();
        jLabel19 = new javax.swing.JLabel();
        jLabel20 = new javax.swing.JLabel();
        jScrollPane12 = new javax.swing.JScrollPane();
        jTablePeregrinaciones = new javax.swing.JTable();
        jLabel21 = new javax.swing.JLabel();
        jLabelTotalPagPeregri = new javax.swing.JLabel();
        jLabel22 = new javax.swing.JLabel();
        jLabelNumPeregri = new javax.swing.JLabel();
        jButton3 = new javax.swing.JButton();
        comboViaje = new javax.swing.JComboBox<>();
        jLabel2 = new javax.swing.JLabel();
        jButton9 = new javax.swing.JButton();
        jButton10 = new javax.swing.JButton();
        jButton11 = new javax.swing.JButton();
        jLabel18 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jLabel1.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        jLabel1.setText("Hospitalidad de Ntra. Sra. de Lourdes - Toledo");

        jTabbedPane1.setAutoscrolls(true);
        jTabbedPane1.addComponentListener(new java.awt.event.ComponentAdapter() {
            public void componentShown(java.awt.event.ComponentEvent evt) {
                jTabbedPane1ComponentShown(evt);
            }
        });

        jPanelPeregrinaciones.addComponentListener(new java.awt.event.ComponentAdapter() {
            public void componentShown(java.awt.event.ComponentEvent evt) {
                jPanelPeregrinacionesComponentShown(evt);
            }
        });

        jTablePersonas.setAutoCreateRowSorter(true);
        jTablePersonas.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null}
            },
            new String [] {
                "Sel", "Id", "DNI", "Apellidos", "Nombre", "Poblaci√≥n", "Fecha Nac.", "Tipo"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Boolean.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class
            };
            boolean[] canEdit = new boolean [] {
                true, false, false, false, false, false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jTablePersonas.setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);
        jTablePersonas.getTableHeader().setReorderingAllowed(false);
        jScrollPane1.setViewportView(jTablePersonas);
        if (jTablePersonas.getColumnModel().getColumnCount() > 0) {
            jTablePersonas.getColumnModel().getColumn(0).setPreferredWidth(30);
            jTablePersonas.getColumnModel().getColumn(1).setPreferredWidth(30);
            jTablePersonas.getColumnModel().getColumn(2).setPreferredWidth(75);
            jTablePersonas.getColumnModel().getColumn(3).setPreferredWidth(175);
            jTablePersonas.getColumnModel().getColumn(4).setPreferredWidth(125);
            jTablePersonas.getColumnModel().getColumn(6).setPreferredWidth(75);
            jTablePersonas.getColumnModel().getColumn(7).setPreferredWidth(90);
        }

        jPanel3.setBorder(javax.swing.BorderFactory.createTitledBorder("Autobus"));

        jLabelIdAutobusEtiqueta.setText("Id Autobus:");

        jLabelDescripcionAutobus.setText("Descripci√≥n");

        jLabelObservaciones.setText("Observaciones");

        jLabelIdAutobus.setText("jLabel7");

        jTableAutobusPersona.setAutoCreateRowSorter(true);
        jTableAutobusPersona.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Id", "DNI", "Apellidos", "Nombre"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jTableAutobusPersona.getTableHeader().setReorderingAllowed(false);
        jScrollPane5.setViewportView(jTableAutobusPersona);

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addComponent(jScrollPane5, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
                        .addContainerGap())
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabelObservaciones)
                            .addComponent(jLabelDescripcionAutobus, javax.swing.GroupLayout.PREFERRED_SIZE, 222, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 111, Short.MAX_VALUE)
                        .addComponent(jLabelIdAutobusEtiqueta)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLabelIdAutobus)
                        .addGap(21, 21, 21))))
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jLabelIdAutobusEtiqueta)
                        .addComponent(jLabelIdAutobus))
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jLabelDescripcionAutobus)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabelObservaciones)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jScrollPane5, javax.swing.GroupLayout.PREFERRED_SIZE, 231, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jPanel5.setBorder(javax.swing.BorderFactory.createTitledBorder("Habitaci√≥n"));

        jLabelDesc1.setText("jLabel4");

        jLabelDesc2.setText("jLabel5");

        jTableHabitacionesPersona.setAutoCreateRowSorter(true);
        jTableHabitacionesPersona.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Id", "DNI", "Apellidos", "Nombre"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jTableHabitacionesPersona.getTableHeader().setReorderingAllowed(false);
        jScrollPane10.setViewportView(jTableHabitacionesPersona);

        jLabelObser.setText("jLabel6");

        jLabelCamasLibres.setText("jLabel7");

        javax.swing.GroupLayout jPanel5Layout = new javax.swing.GroupLayout(jPanel5);
        jPanel5.setLayout(jPanel5Layout);
        jPanel5Layout.setHorizontalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel5Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabelDesc1)
                    .addComponent(jLabelDesc2))
                .addGap(139, 139, 139)
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabelCamasLibres)
                    .addComponent(jLabelObser))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(jPanel5Layout.createSequentialGroup()
                    .addContainerGap()
                    .addComponent(jScrollPane10, javax.swing.GroupLayout.DEFAULT_SIZE, 447, Short.MAX_VALUE)
                    .addContainerGap()))
        );
        jPanel5Layout.setVerticalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addGap(6, 6, 6)
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabelDesc1)
                    .addComponent(jLabelObser))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabelDesc2)
                    .addComponent(jLabelCamasLibres))
                .addContainerGap(204, Short.MAX_VALUE))
            .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(jPanel5Layout.createSequentialGroup()
                    .addGap(57, 57, 57)
                    .addComponent(jScrollPane10, javax.swing.GroupLayout.DEFAULT_SIZE, 179, Short.MAX_VALUE)
                    .addContainerGap()))
        );

        jButtonEliminaDeLaPeregrinacion.setText("Eliminar de la peregrinaci√≥n");
        jButtonEliminaDeLaPeregrinacion.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonEliminaDeLaPeregrinacionActionPerformed(evt);
            }
        });

        jButtonAgregaPersonas.setText("Agragar personas");
        jButtonAgregaPersonas.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonAgregaPersonasActionPerformed(evt);
            }
        });

        jLabel4.setText("Total lista:");

        labelTotal.setText("jLabel5");

        comboTipoViajero.setModel(GestionTiposViajeroBD.getModeloComboTipoViajero(true));
        comboTipoViajero.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                comboTipoViajeroActionPerformed(evt);
            }
        });

        jLabel3.setText("Equipo:");

        jLabel7.setText("Lista de personas inscritas en la peregrinaci√≥n seleccionada. A la derecha aparece su autobus y habitaci√≥n.");

        jButton2.setText("Buscar");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        jButton12.setText("Limpiar");
        jButton12.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton12ActionPerformed(evt);
            }
        });

        jButton14.setText("Copiar datos");
        jButton14.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton14ActionPerformed(evt);
            }
        });

        jButton15.setText("Cambiar Equipo");
        jButton15.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton15ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanelPeregrinacionesLayout = new javax.swing.GroupLayout(jPanelPeregrinaciones);
        jPanelPeregrinaciones.setLayout(jPanelPeregrinacionesLayout);
        jPanelPeregrinacionesLayout.setHorizontalGroup(
            jPanelPeregrinacionesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanelPeregrinacionesLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanelPeregrinacionesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanelPeregrinacionesLayout.createSequentialGroup()
                        .addComponent(jLabel3)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(comboTipoViajero, javax.swing.GroupLayout.PREFERRED_SIZE, 192, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(38, 38, 38)
                        .addComponent(jTextFiltro, javax.swing.GroupLayout.PREFERRED_SIZE, 138, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jButton2)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jButton12)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jButton14))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanelPeregrinacionesLayout.createSequentialGroup()
                        .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 61, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(labelTotal)
                        .addGap(79, 79, 79)
                        .addComponent(jButton15)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jButtonAgregaPersonas)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jButtonEliminaDeLaPeregrinacion))
                    .addGroup(jPanelPeregrinacionesLayout.createSequentialGroup()
                        .addComponent(jLabel7)
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.Alignment.TRAILING))
                .addGap(7, 7, 7)
                .addGroup(jPanelPeregrinacionesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jPanel5, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPanel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );
        jPanelPeregrinacionesLayout.setVerticalGroup(
            jPanelPeregrinacionesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanelPeregrinacionesLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanelPeregrinacionesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanelPeregrinacionesLayout.createSequentialGroup()
                        .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jPanel5, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanelPeregrinacionesLayout.createSequentialGroup()
                        .addComponent(jLabel7)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanelPeregrinacionesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(comboTipoViajero, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel3)
                            .addComponent(jTextFiltro, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jButton2)
                            .addComponent(jButton12)
                            .addComponent(jButton14))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 532, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGroup(jPanelPeregrinacionesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanelPeregrinacionesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                .addComponent(jLabel4)
                                .addComponent(labelTotal))
                            .addGroup(jPanelPeregrinacionesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                .addComponent(jButtonEliminaDeLaPeregrinacion)
                                .addComponent(jButtonAgregaPersonas)
                                .addComponent(jButton15)))))
                .addGap(78, 78, 78))
        );

        jPanel5.getAccessibleContext().setAccessibleName("Habitacion");
        jPanel5.getAccessibleContext().setAccessibleDescription("");

        jTabbedPane1.addTab("Peregrinaciones", jPanelPeregrinaciones);

        jPanelPersonasSinAutobus.addComponentListener(new java.awt.event.ComponentAdapter() {
            public void componentShown(java.awt.event.ComponentEvent evt) {
                jPanelPersonasSinAutobusComponentShown(evt);
            }
        });

        jTablePersonasSinAutobus.setAutoCreateRowSorter(true);
        jTablePersonasSinAutobus.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Sel.", "Id", "DNI", "Apellidos", "Nombre", "Fecha Nac.", "Tipo", "IdTipo"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Boolean.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class
            };
            boolean[] canEdit = new boolean [] {
                true, false, false, false, false, false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jTablePersonasSinAutobus.getTableHeader().setReorderingAllowed(false);
        jScrollPane3.setViewportView(jTablePersonasSinAutobus);
        if (jTablePersonasSinAutobus.getColumnModel().getColumnCount() > 0) {
            jTablePersonasSinAutobus.getColumnModel().getColumn(0).setPreferredWidth(30);
            jTablePersonasSinAutobus.getColumnModel().getColumn(1).setPreferredWidth(30);
            jTablePersonasSinAutobus.getColumnModel().getColumn(2).setPreferredWidth(75);
            jTablePersonasSinAutobus.getColumnModel().getColumn(3).setPreferredWidth(150);
            jTablePersonasSinAutobus.getColumnModel().getColumn(4).setPreferredWidth(100);
            jTablePersonasSinAutobus.getColumnModel().getColumn(5).setPreferredWidth(100);
            jTablePersonasSinAutobus.getColumnModel().getColumn(6).setPreferredWidth(100);
            jTablePersonasSinAutobus.getColumnModel().getColumn(7).setPreferredWidth(10);
        }

        jButton5.setText("Asignar autobus");
        jButton5.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton5ActionPerformed(evt);
            }
        });

        jLabel8.setText("Total lista:");

        jLabelTotalListaPersonasSinBus.setText("jLabel9");

        javax.swing.GroupLayout jPanelPersonasSinAutobusLayout = new javax.swing.GroupLayout(jPanelPersonasSinAutobus);
        jPanelPersonasSinAutobus.setLayout(jPanelPersonasSinAutobusLayout);
        jPanelPersonasSinAutobusLayout.setHorizontalGroup(
            jPanelPersonasSinAutobusLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanelPersonasSinAutobusLayout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(jPanelPersonasSinAutobusLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                    .addGroup(jPanelPersonasSinAutobusLayout.createSequentialGroup()
                        .addGap(10, 10, 10)
                        .addComponent(jLabel8)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLabelTotalListaPersonasSinBus)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jButton5))
                    .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 1145, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(29, 29, 29))
        );
        jPanelPersonasSinAutobusLayout.setVerticalGroup(
            jPanelPersonasSinAutobusLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanelPersonasSinAutobusLayout.createSequentialGroup()
                .addContainerGap(43, Short.MAX_VALUE)
                .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 553, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanelPersonasSinAutobusLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButton5)
                    .addComponent(jLabel8)
                    .addComponent(jLabelTotalListaPersonasSinBus))
                .addContainerGap())
        );

        jTabbedPane1.addTab("Personas sin autobus", jPanelPersonasSinAutobus);

        jPanelAutobuses.addComponentListener(new java.awt.event.ComponentAdapter() {
            public void componentShown(java.awt.event.ComponentEvent evt) {
                jPanelAutobusesComponentShown(evt);
            }
        });

        jTableAutobuses.setAutoCreateRowSorter(true);
        jTableAutobuses.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null}
            },
            new String [] {
                "id", "Descripci√≥n", "Observaciones", "Plazas Enf", "Plazas Hos"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Integer.class, java.lang.String.class, java.lang.String.class, java.lang.Integer.class, java.lang.Integer.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jTableAutobuses.getTableHeader().setReorderingAllowed(false);
        jTableAutobuses.addPropertyChangeListener(new java.beans.PropertyChangeListener() {
            public void propertyChange(java.beans.PropertyChangeEvent evt) {
                jTableAutobusesPropertyChange(evt);
            }
        });
        jScrollPane2.setViewportView(jTableAutobuses);
        if (jTableAutobuses.getColumnModel().getColumnCount() > 0) {
            jTableAutobuses.getColumnModel().getColumn(0).setPreferredWidth(10);
            jTableAutobuses.getColumnModel().getColumn(1).setPreferredWidth(180);
            jTableAutobuses.getColumnModel().getColumn(2).setPreferredWidth(180);
            jTableAutobuses.getColumnModel().getColumn(3).setPreferredWidth(30);
            jTableAutobuses.getColumnModel().getColumn(4).setPreferredWidth(30);
        }

        jTablePersonasBus.setAutoCreateRowSorter(true);
        jTablePersonasBus.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Sel", "Id", "DNI", "Apellidos", "Nombre", "Tipo"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Boolean.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class
            };
            boolean[] canEdit = new boolean [] {
                true, false, false, false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jTablePersonasBus.setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);
        jTablePersonasBus.getTableHeader().setReorderingAllowed(false);
        jScrollPane4.setViewportView(jTablePersonasBus);
        if (jTablePersonasBus.getColumnModel().getColumnCount() > 0) {
            jTablePersonasBus.getColumnModel().getColumn(0).setPreferredWidth(30);
            jTablePersonasBus.getColumnModel().getColumn(1).setPreferredWidth(35);
            jTablePersonasBus.getColumnModel().getColumn(2).setPreferredWidth(100);
            jTablePersonasBus.getColumnModel().getColumn(3).setPreferredWidth(165);
            jTablePersonasBus.getColumnModel().getColumn(4).setPreferredWidth(100);
            jTablePersonasBus.getColumnModel().getColumn(5).setPreferredWidth(100);
        }

        jButton1.setText("Agregar pasajeros");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jButton4.setText("Quitar Persona");
        jButton4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton4ActionPerformed(evt);
            }
        });

        jLabel9.setText("Total lista:");

        jLabelTotalBuses.setText("jLabel10");

        jLabel12.setText("Total lista:");

        jLabelTotalPersonasAutobus.setText("  ");

        javax.swing.GroupLayout jPanelAutobusesLayout = new javax.swing.GroupLayout(jPanelAutobuses);
        jPanelAutobuses.setLayout(jPanelAutobusesLayout);
        jPanelAutobusesLayout.setHorizontalGroup(
            jPanelAutobusesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanelAutobusesLayout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(jPanelAutobusesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                    .addGroup(jPanelAutobusesLayout.createSequentialGroup()
                        .addGap(10, 10, 10)
                        .addComponent(jLabel9)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jLabelTotalBuses)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jButton1))
                    .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 595, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(19, 19, 19)
                .addGroup(jPanelAutobusesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(jPanelAutobusesLayout.createSequentialGroup()
                        .addComponent(jLabel12)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLabelTotalPersonasAutobus)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jButton4))
                    .addComponent(jScrollPane4, javax.swing.GroupLayout.PREFERRED_SIZE, 524, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap())
        );
        jPanelAutobusesLayout.setVerticalGroup(
            jPanelAutobusesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanelAutobusesLayout.createSequentialGroup()
                .addGap(40, 40, 40)
                .addGroup(jPanelAutobusesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane2)
                    .addComponent(jScrollPane4, javax.swing.GroupLayout.DEFAULT_SIZE, 545, Short.MAX_VALUE))
                .addGroup(jPanelAutobusesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanelAutobusesLayout.createSequentialGroup()
                        .addGap(18, 18, 18)
                        .addGroup(jPanelAutobusesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jButton1)
                            .addComponent(jButton4)))
                    .addGroup(jPanelAutobusesLayout.createSequentialGroup()
                        .addGap(10, 10, 10)
                        .addGroup(jPanelAutobusesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel9)
                            .addComponent(jLabelTotalBuses)))
                    .addGroup(jPanelAutobusesLayout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(jPanelAutobusesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel12)
                            .addComponent(jLabelTotalPersonasAutobus))))
                .addContainerGap())
        );

        jTabbedPane1.addTab("Autobuses", jPanelAutobuses);

        jPanelPersonasSinHabitacion.addComponentListener(new java.awt.event.ComponentAdapter() {
            public void componentShown(java.awt.event.ComponentEvent evt) {
                jPanelPersonasSinHabitacionComponentShown(evt);
            }
        });

        jTablePersonasSinHabitacion.setAutoCreateRowSorter(true);
        jTablePersonasSinHabitacion.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Sel.", "Id", "DNI", "Apellidos", "Nombre", "Fecha Nac.", "Tipo"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Boolean.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class
            };
            boolean[] canEdit = new boolean [] {
                true, false, false, false, false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jTablePersonasSinHabitacion.getTableHeader().setReorderingAllowed(false);
        jScrollPane9.setViewportView(jTablePersonasSinHabitacion);
        if (jTablePersonasSinHabitacion.getColumnModel().getColumnCount() > 0) {
            jTablePersonasSinHabitacion.getColumnModel().getColumn(0).setPreferredWidth(30);
            jTablePersonasSinHabitacion.getColumnModel().getColumn(1).setPreferredWidth(30);
            jTablePersonasSinHabitacion.getColumnModel().getColumn(2).setPreferredWidth(75);
            jTablePersonasSinHabitacion.getColumnModel().getColumn(3).setPreferredWidth(150);
            jTablePersonasSinHabitacion.getColumnModel().getColumn(4).setPreferredWidth(100);
            jTablePersonasSinHabitacion.getColumnModel().getColumn(5).setPreferredWidth(100);
            jTablePersonasSinHabitacion.getColumnModel().getColumn(6).setPreferredWidth(100);
        }

        jButton8.setText("Asignar habitaci√≥n");
        jButton8.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton8ActionPerformed(evt);
            }
        });

        jLabel10.setText("Total lista: ");

        jLabelTotalPersonasSinHab.setText("jLabel11");

        javax.swing.GroupLayout jPanelPersonasSinHabitacionLayout = new javax.swing.GroupLayout(jPanelPersonasSinHabitacion);
        jPanelPersonasSinHabitacion.setLayout(jPanelPersonasSinHabitacionLayout);
        jPanelPersonasSinHabitacionLayout.setHorizontalGroup(
            jPanelPersonasSinHabitacionLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanelPersonasSinHabitacionLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanelPersonasSinHabitacionLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane9, javax.swing.GroupLayout.DEFAULT_SIZE, 1153, Short.MAX_VALUE)
                    .addGroup(jPanelPersonasSinHabitacionLayout.createSequentialGroup()
                        .addGap(10, 10, 10)
                        .addComponent(jLabel10)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLabelTotalPersonasSinHab)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jButton8)))
                .addContainerGap())
        );
        jPanelPersonasSinHabitacionLayout.setVerticalGroup(
            jPanelPersonasSinHabitacionLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanelPersonasSinHabitacionLayout.createSequentialGroup()
                .addGap(37, 37, 37)
                .addComponent(jScrollPane9, javax.swing.GroupLayout.DEFAULT_SIZE, 559, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanelPersonasSinHabitacionLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButton8)
                    .addComponent(jLabel10)
                    .addComponent(jLabelTotalPersonasSinHab))
                .addContainerGap())
        );

        jTabbedPane1.addTab("Personas sin habitaci√≥n", jPanelPersonasSinHabitacion);

        jPanelHabitaciones.addComponentListener(new java.awt.event.ComponentAdapter() {
            public void componentShown(java.awt.event.ComponentEvent evt) {
                jPanelHabitacionesComponentShown(evt);
            }
        });

        jTableHabitaciones.setAutoCreateRowSorter(true);
        jTableHabitaciones.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null}
            },
            new String [] {
                "Id", "Desc1", "Hotel", "Observaciones", "Camas", "Libres"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Integer.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.Integer.class, java.lang.Integer.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jTableHabitaciones.getTableHeader().setReorderingAllowed(false);
        jScrollPane6.setViewportView(jTableHabitaciones);
        if (jTableHabitaciones.getColumnModel().getColumnCount() > 0) {
            jTableHabitaciones.getColumnModel().getColumn(0).setResizable(false);
            jTableHabitaciones.getColumnModel().getColumn(0).setPreferredWidth(25);
            jTableHabitaciones.getColumnModel().getColumn(1).setPreferredWidth(120);
            jTableHabitaciones.getColumnModel().getColumn(2).setPreferredWidth(120);
            jTableHabitaciones.getColumnModel().getColumn(3).setPreferredWidth(100);
            jTableHabitaciones.getColumnModel().getColumn(4).setPreferredWidth(40);
            jTableHabitaciones.getColumnModel().getColumn(5).setPreferredWidth(40);
        }

        jTablePersonasHabitacion.setAutoCreateRowSorter(true);
        jTablePersonasHabitacion.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Sel", "Id", "DNI", "Apellidos", "Nombre", "Tipo"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Boolean.class, java.lang.String.class, java.lang.Object.class, java.lang.String.class, java.lang.String.class, java.lang.String.class
            };
            boolean[] canEdit = new boolean [] {
                true, false, false, false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jTablePersonasHabitacion.getTableHeader().setReorderingAllowed(false);
        jScrollPane7.setViewportView(jTablePersonasHabitacion);
        if (jTablePersonasHabitacion.getColumnModel().getColumnCount() > 0) {
            jTablePersonasHabitacion.getColumnModel().getColumn(0).setResizable(false);
            jTablePersonasHabitacion.getColumnModel().getColumn(0).setPreferredWidth(30);
            jTablePersonasHabitacion.getColumnModel().getColumn(1).setResizable(false);
            jTablePersonasHabitacion.getColumnModel().getColumn(1).setPreferredWidth(35);
            jTablePersonasHabitacion.getColumnModel().getColumn(2).setResizable(false);
            jTablePersonasHabitacion.getColumnModel().getColumn(2).setPreferredWidth(100);
            jTablePersonasHabitacion.getColumnModel().getColumn(3).setResizable(false);
            jTablePersonasHabitacion.getColumnModel().getColumn(3).setPreferredWidth(165);
            jTablePersonasHabitacion.getColumnModel().getColumn(4).setResizable(false);
            jTablePersonasHabitacion.getColumnModel().getColumn(4).setPreferredWidth(100);
            jTablePersonasHabitacion.getColumnModel().getColumn(5).setResizable(false);
            jTablePersonasHabitacion.getColumnModel().getColumn(5).setPreferredWidth(100);
        }

        jButton6.setText("A√±adir persona");
        jButton6.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton6ActionPerformed(evt);
            }
        });

        jButton7.setText("Quitar persona");
        jButton7.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton7ActionPerformed(evt);
            }
        });

        jComboHotel.setMaximumRowCount(50);
        jComboHotel.setModel(GestionHabitacionesBD.getModeloComboHotelesConOpcionTodos());
        jComboHotel.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jComboHotelActionPerformed(evt);
            }
        });

        jLabel5.setText("Filtrar por hotel:");

        jLabel6.setText("Listado de habotaciones, puede filtrar por hotel. A la derecha sadr√°n las personas de la habitaci√≥n.");

        jLabel11.setText("Total lista: ");

        jLabelTotalHabitaciones.setText("jLabel12");

        javax.swing.GroupLayout jPanelHabitacionesLayout = new javax.swing.GroupLayout(jPanelHabitaciones);
        jPanelHabitaciones.setLayout(jPanelHabitacionesLayout);
        jPanelHabitacionesLayout.setHorizontalGroup(
            jPanelHabitacionesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanelHabitacionesLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanelHabitacionesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanelHabitacionesLayout.createSequentialGroup()
                        .addGroup(jPanelHabitacionesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanelHabitacionesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                .addGroup(jPanelHabitacionesLayout.createSequentialGroup()
                                    .addGap(10, 10, 10)
                                    .addComponent(jLabel11)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                    .addComponent(jLabelTotalHabitaciones)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(jButton6))
                                .addGroup(jPanelHabitacionesLayout.createSequentialGroup()
                                    .addComponent(jLabel5)
                                    .addGap(24, 24, 24)
                                    .addComponent(jComboHotel, javax.swing.GroupLayout.PREFERRED_SIZE, 295, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addGap(79, 79, 79)))
                            .addComponent(jScrollPane6, javax.swing.GroupLayout.PREFERRED_SIZE, 529, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(17, 17, 17)
                        .addGroup(jPanelHabitacionesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jScrollPane7, javax.swing.GroupLayout.DEFAULT_SIZE, 607, Short.MAX_VALUE)
                            .addGroup(jPanelHabitacionesLayout.createSequentialGroup()
                                .addGap(0, 0, Short.MAX_VALUE)
                                .addComponent(jButton7))))
                    .addGroup(jPanelHabitacionesLayout.createSequentialGroup()
                        .addComponent(jLabel6)
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
        );
        jPanelHabitacionesLayout.setVerticalGroup(
            jPanelHabitacionesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanelHabitacionesLayout.createSequentialGroup()
                .addGap(7, 7, 7)
                .addComponent(jLabel6)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanelHabitacionesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanelHabitacionesLayout.createSequentialGroup()
                        .addGroup(jPanelHabitacionesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jComboHotel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel5))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jScrollPane6, javax.swing.GroupLayout.PREFERRED_SIZE, 522, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 1, Short.MAX_VALUE))
                    .addComponent(jScrollPane7))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanelHabitacionesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jButton7)
                    .addComponent(jButton6)
                    .addGroup(jPanelHabitacionesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jLabel11)
                        .addComponent(jLabelTotalHabitaciones)))
                .addContainerGap())
        );

        jTabbedPane1.addTab("Habitaciones", jPanelHabitaciones);

        jPanelListadoTotal.addComponentListener(new java.awt.event.ComponentAdapter() {
            public void componentShown(java.awt.event.ComponentEvent evt) {
                jPanelListadoTotalComponentShown(evt);
            }
        });

        jTableListadoTotal.setAutoCreateRowSorter(true);
        jTableListadoTotal.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Apellidos", "Nombre", "Poblaci√≥n", "Equipo", "Autobus", "Hotel", "Habitaci√≥n"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane8.setViewportView(jTableListadoTotal);

        jLabel13.setText("El listado solo contiene las personas que tienen asigando autob√∫s y habitaci√≥n.");

        jLabel14.setText("Total listado:");

        jLabelListadoTotal.setText("jLabelTotalListado");

        jButton13.setText("Copiar datos");
        jButton13.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton13ActionPerformed(evt);
            }
        });

        jComboEquipoListadoTotal.setModel(GestionTiposViajeroBD.getModeloComboTipoViajero(true));
        jComboEquipoListadoTotal.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jComboEquipoListadoTotalActionPerformed(evt);
            }
        });

        jLabel15.setText("Equipo:");

        jLabel16.setText("Autob√∫s:");

        jLabel17.setText("Hotel:");

        jComboAutobusesListadoTotal.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
        jComboAutobusesListadoTotal.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jComboAutobusesListadoTotalActionPerformed(evt);
            }
        });

        jComboHotelesListadoTotal.setModel(GestionHabitacionesBD.getModeloComboHotelesConOpcionTodos());
        jComboHotelesListadoTotal.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jComboHotelesListadoTotalActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanelListadoTotalLayout = new javax.swing.GroupLayout(jPanelListadoTotal);
        jPanelListadoTotal.setLayout(jPanelListadoTotalLayout);
        jPanelListadoTotalLayout.setHorizontalGroup(
            jPanelListadoTotalLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanelListadoTotalLayout.createSequentialGroup()
                .addGroup(jPanelListadoTotalLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanelListadoTotalLayout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jScrollPane8))
                    .addGroup(jPanelListadoTotalLayout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jLabel14)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLabelListadoTotal)
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addGroup(jPanelListadoTotalLayout.createSequentialGroup()
                        .addGap(48, 48, 48)
                        .addComponent(jLabel13)
                        .addGap(20, 20, 20)
                        .addComponent(jLabel15)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jComboEquipoListadoTotal, javax.swing.GroupLayout.PREFERRED_SIZE, 134, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(jLabel16)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jComboAutobusesListadoTotal, javax.swing.GroupLayout.PREFERRED_SIZE, 118, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(jLabel17)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jComboHotelesListadoTotal, 0, 1, Short.MAX_VALUE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jButton13, javax.swing.GroupLayout.PREFERRED_SIZE, 99, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap())
        );
        jPanelListadoTotalLayout.setVerticalGroup(
            jPanelListadoTotalLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanelListadoTotalLayout.createSequentialGroup()
                .addGap(11, 11, 11)
                .addGroup(jPanelListadoTotalLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel13)
                    .addComponent(jButton13)
                    .addComponent(jComboEquipoListadoTotal, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel15)
                    .addComponent(jLabel16)
                    .addComponent(jLabel17)
                    .addComponent(jComboAutobusesListadoTotal, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jComboHotelesListadoTotal, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(11, 11, 11)
                .addComponent(jScrollPane8, javax.swing.GroupLayout.PREFERRED_SIZE, 559, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(jPanelListadoTotalLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel14)
                    .addComponent(jLabelListadoTotal))
                .addContainerGap())
        );

        jTabbedPane1.addTab("Listado completo", jPanelListadoTotal);

        jPanel1.addComponentListener(new java.awt.event.ComponentAdapter() {
            public void componentShown(java.awt.event.ComponentEvent evt) {
                jPanel1ComponentShown(evt);
            }
        });

        jTableNumeroPeregrinaciones.setAutoCreateRowSorter(true);
        jTableNumeroPeregrinaciones.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Id", "Nombre", "Apellidos", "Total Peregrinaciones"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.Integer.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane11.setViewportView(jTableNumeroPeregrinaciones);
        if (jTableNumeroPeregrinaciones.getColumnModel().getColumnCount() > 0) {
            jTableNumeroPeregrinaciones.getColumnModel().getColumn(0).setMinWidth(40);
            jTableNumeroPeregrinaciones.getColumnModel().getColumn(0).setPreferredWidth(40);
            jTableNumeroPeregrinaciones.getColumnModel().getColumn(0).setMaxWidth(40);
        }

        jTextNumPeregriAnt2022.setHorizontalAlignment(javax.swing.JTextField.RIGHT);

        jLabel19.setText("Peregrinaciones anteriores a 2022");

        jLabel20.setText("Peregrinaciones desde 2022");

        jTablePeregrinaciones.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Peregrinaciones"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class
            };
            boolean[] canEdit = new boolean [] {
                false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane12.setViewportView(jTablePeregrinaciones);
        if (jTablePeregrinaciones.getColumnModel().getColumnCount() > 0) {
            jTablePeregrinaciones.getColumnModel().getColumn(0).setResizable(false);
        }

        jLabel21.setText("Total lista: ");

        jLabelTotalPagPeregri.setText("jLabel22");

        jLabel22.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jLabel22.setText("Total peregrinaciones: ");

        jLabelNumPeregri.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jLabelNumPeregri.setText("jLabelNumPeregri");

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jScrollPane11, javax.swing.GroupLayout.PREFERRED_SIZE, 543, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(179, 179, 179)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(jLabel19)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(jTextNumPeregriAnt2022, javax.swing.GroupLayout.PREFERRED_SIZE, 52, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(856, 856, 856))
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel20)
                                    .addComponent(jScrollPane12, javax.swing.GroupLayout.PREFERRED_SIZE, 240, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addGroup(jPanel1Layout.createSequentialGroup()
                                        .addComponent(jLabel22)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(jLabelNumPeregri)))
                                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jLabel21)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLabelTotalPagPeregri)
                        .addGap(0, 0, Short.MAX_VALUE))))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(29, 29, 29)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jTextNumPeregriAnt2022, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel19))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jLabel20)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jScrollPane12, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(34, 34, 34)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel22)
                            .addComponent(jLabelNumPeregri))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 42, Short.MAX_VALUE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jScrollPane11)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)))
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel21)
                    .addComponent(jLabelTotalPagPeregri))
                .addContainerGap())
        );

        jTabbedPane1.addTab("Numero de peregrinaciones", jPanel1);

        jButton3.setText("Personas");
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });

        comboViaje.setModel(GestionViajesBD.getModeloComboViajes());
        comboViaje.setSelectedIndex(comboViaje.getModel().getSize()-1);
        comboViaje.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                comboViajeActionPerformed(evt);
            }
        });
        comboViaje.addPropertyChangeListener(new java.beans.PropertyChangeListener() {
            public void propertyChange(java.beans.PropertyChangeEvent evt) {
                comboViajePropertyChange(evt);
            }
        });

        jLabel2.setText("Peregrinaci√≥n");

        jButton9.setText("Crear habitaci√≥n");
        jButton9.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton9ActionPerformed(evt);
            }
        });

        jButton10.setText("Crear Bus");
        jButton10.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton10ActionPerformed(evt);
            }
        });

        jButton11.setText("Crear Persona");
        jButton11.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton11ActionPerformed(evt);
            }
        });

        jLabel18.setText("v 1.4");

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addComponent(jTabbedPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 1182, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 25, Short.MAX_VALUE))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel2Layout.createSequentialGroup()
                                .addComponent(jLabel2)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(comboViaje, javax.swing.GroupLayout.PREFERRED_SIZE, 353, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(jLabel1))
                        .addGap(171, 171, 171)
                        .addComponent(jButton3)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jButton10)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jButton9)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jButton11)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jLabel18)))
                .addContainerGap())
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                        .addGroup(jPanel2Layout.createSequentialGroup()
                            .addComponent(jLabel1)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                            .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                .addComponent(comboViaje, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(jLabel2)))
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE, false)
                            .addComponent(jButton3, javax.swing.GroupLayout.PREFERRED_SIZE, 62, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jButton9, javax.swing.GroupLayout.PREFERRED_SIZE, 62, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jButton10, javax.swing.GroupLayout.PREFERRED_SIZE, 62, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addComponent(jButton11, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addComponent(jLabel18))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jTabbedPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 671, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void comboTipoViajeroActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_comboTipoViajeroActionPerformed
        System.out.println(new Object() {
        }.getClass().getEnclosingMethod().getName());
        cargaTablaPersonas(true);
    }//GEN-LAST:event_comboTipoViajeroActionPerformed

    private void comboViajePropertyChange(java.beans.PropertyChangeEvent evt) {//GEN-FIRST:event_comboViajePropertyChange

    }//GEN-LAST:event_comboViajePropertyChange

    private void comboViajeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_comboViajeActionPerformed
        limpiarTablaHuespedes();
        System.out.println("Combo peregrinacionesssssss");
        if (jPanelPeregrinaciones.isVisible()) {
            cargaTablaPersonas(true);
        } else if (jPanelAutobuses.isVisible()) {
            cargaTablaAutobuses();
        } else if (jPanelPersonasSinAutobus.isVisible()) {
            cargaTablaPersonasSinAutobus();
        } else if (jPanelHabitaciones.isVisible()) {
            cargaTablaHabitaciones();
        } else if (jPanelPersonasSinHabitacion.isVisible()) {
            cargaTablaPersonasSinHabitacion();
        } else if (jPanelListadoTotal.isVisible()) {
            cargaTablaTotal();
            jComboAutobusesListadoTotal.setModel(GestionAutobusesBD.getModeloComboAutobusesConTodos(filtroViaje));
        }
    }//GEN-LAST:event_comboViajeActionPerformed

    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed
        //Abrir ventana con lista de personal para poder seleccionar.
        JDialog frame = new JDialog(this, "Gestion de personas", true);
        frame.setDefaultCloseOperation(JDialog.HIDE_ON_CLOSE);
        frame.getContentPane().add(new ListadoPersonas());
        frame.pack();
        frame.setLocationRelativeTo(this);
        frame.setVisible(true);
        //iniciarMisComponentes();
        frame.setVisible(false);
        cargaTablaPersonas(true);
    }//GEN-LAST:event_jButton3ActionPerformed

    private void jButtonEliminaDeLaPeregrinacionActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonEliminaDeLaPeregrinacionActionPerformed
        ArrayList<PersonaBean> lista = new ArrayList<PersonaBean>();
        for (int i = 0; i < jTablePersonas.getRowCount(); i++) {
            if ((boolean) jTablePersonas.getValueAt(i, 0)) {
                PersonaBean persona = new PersonaBean();
                persona.setIdPersona((String) jTablePersonas.getValueAt(i, 1));
                lista.add(persona);
            }
        }
        if (lista.size() < 1) {
            JOptionPane.showMessageDialog(this, "Debe seleccionar al menos una persona");
            return;

        }
        for (PersonaBean persona : lista) {
            GestionViajesBD.eliminaPersonasPeregrinacion(persona.getIdPersona(), filtroViaje);

        }
        cargaTablaPersonas(true);
        prepararVistaPasajerosAutobus();
    }//GEN-LAST:event_jButtonEliminaDeLaPeregrinacionActionPerformed

    private void jTabbedPane1ComponentShown(java.awt.event.ComponentEvent evt) {//GEN-FIRST:event_jTabbedPane1ComponentShown

    }//GEN-LAST:event_jTabbedPane1ComponentShown

    private void jPanelAutobusesComponentShown(java.awt.event.ComponentEvent evt) {//GEN-FIRST:event_jPanelAutobusesComponentShown
        System.out.println("Perta√±a Autobuses");
        cargaTablaAutobuses();
    }//GEN-LAST:event_jPanelAutobusesComponentShown

    private void jTableAutobusesPropertyChange(java.beans.PropertyChangeEvent evt) {//GEN-FIRST:event_jTableAutobusesPropertyChange

    }//GEN-LAST:event_jTableAutobusesPropertyChange

    private void jPanelPersonasSinAutobusComponentShown(java.awt.event.ComponentEvent evt) {//GEN-FIRST:event_jPanelPersonasSinAutobusComponentShown
        System.out.println("Perta√±a 3");
        cargaTablaPersonasSinAutobus();        // TODO add your handling code here:
    }//GEN-LAST:event_jPanelPersonasSinAutobusComponentShown

    private void jPanelPeregrinacionesComponentShown(java.awt.event.ComponentEvent evt) {//GEN-FIRST:event_jPanelPeregrinacionesComponentShown
        System.out.println("Perta√±a 1");

        vaciarTabla((DefaultTableModel) jTableHabitacionesPersona.getModel());
        vaciarTabla((DefaultTableModel) jTableAutobusPersona.getModel());
        cargaTablaPersonas(true);
    }//GEN-LAST:event_jPanelPeregrinacionesComponentShown

    private void jButton5ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton5ActionPerformed
        //Boton asignar autobus de la ventana de personas sin autobus

        ArrayList<PersonaBean> lista = new ArrayList<PersonaBean>();
        for (int i = 0; i < jTablePersonasSinAutobus.getRowCount(); i++) {
            if ((boolean) jTablePersonasSinAutobus.getValueAt(i, 0)) {
                PersonaBean persona = new PersonaBean();
                persona.setIdPersona((String) jTablePersonasSinAutobus.getValueAt(i, 1));
                persona.setIdTipoViajero((String) jTablePersonasSinAutobus.getValueAt(i, 7));
                lista.add(persona);
            }
        }
        if (lista.size() < 1) {
            JOptionPane.showMessageDialog(this, "Debe seleccionar al menos una persona");
            return;

        }
        //kkk
        JDialog frame = new JDialog((JFrame) null, "Guardar", true);
        frame.setDefaultCloseOperation(JDialog.HIDE_ON_CLOSE);
        filtroViaje = comboViaje.getModel().getElementAt(comboViaje.getSelectedIndex()).split(" - ")[0];
        OpcionesGuardarPersonaAutobusModal ventana = new OpcionesGuardarPersonaAutobusModal(filtroViaje);
        frame.getContentPane().add(ventana);
        frame.pack();
        frame.setLocationRelativeTo(this);
        frame.setVisible(true);

        String opcion = ventana.getBoton();
        if ("G".equals(opcion)) {
            AutobusBean autobus = new AutobusBean(ventana.getIdAutobus());
            String result = GestionAutobusesBD.a√±adirPasajerosAutobus(lista, autobus.getIdAutobus());
            JOptionPane.showMessageDialog(this, result);

        }

        cargaTablaPersonasSinAutobus();
    }//GEN-LAST:event_jButton5ActionPerformed

    private void jButtonAgregaPersonasActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonAgregaPersonasActionPerformed
        filtroViaje = comboViaje.getModel().getElementAt(comboViaje.getSelectedIndex()).split(" - ")[0];
        JDialog frame = new JDialog(this, "Gestion de personas", true);
        frame.setDefaultCloseOperation(JDialog.HIDE_ON_CLOSE);
        ListadoPersonasAsignar ventana = new ListadoPersonasAsignar(filtroViaje, ListadoPersonasAsignar.AsignarAViaje);
        frame.getContentPane().add(ventana);
        frame.pack();
        frame.setLocationRelativeTo(this);
        frame.setVisible(true);
        //iniciarMisComponentes();
        if ("G".equals(ventana.getBoton())) {
            String mensaje = GestionViajesBD.guardaPersonasPeregrinacionUnitaria(ventana.getListaPersonasSelec(), filtroViaje, ventana.getTipoViajero());
            JOptionPane.showMessageDialog(this, mensaje);
            cargaTablaPersonas(true);
        } else {
            return;
        }
    }//GEN-LAST:event_jButtonAgregaPersonasActionPerformed

    /**
     * Boton de a√±adir personas al autobus. Est√° en la pestata√±a de autobuses
     *
     * @param evt
     */
    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        if (jTableAutobuses.getSelectedRow() < 0) {
            JOptionPane.showMessageDialog(this, "Debe seleccionar un autob√∫s");
            return;
        }
        String idAutobus = (String) jTableAutobuses.getValueAt(jTableAutobuses.getSelectedRow(), 0);
        AutobusBean autobus = new AutobusBean(idAutobus);
        autobus.cargaDatos();
        JDialog frame = new JDialog(this, "Gestion de personas", true);
        frame.setDefaultCloseOperation(JDialog.HIDE_ON_CLOSE);
        ListadoPersonasAsignar ventana = new ListadoPersonasAsignar(autobus.getIdViaje(), ListadoPersonasAsignar.AsignarABus);
        frame.getContentPane().add(ventana);
        frame.pack();
        frame.setLocationRelativeTo(this);
        frame.setVisible(true);
        //iniciarMisComponentes();
        if ("G".equals(ventana.getBoton())) {
            //kkk
            String mensaje = GestionAutobusesBD.a√±adirPasajerosAutobus(ventana.getListaPersonasSelec(), idAutobus);
            JOptionPane.showMessageDialog(this, mensaje);
            //cargarTablaPasajeros(idAutobus);
            int sel = jTableAutobuses.getSelectedRow();
            cargaTablaAutobuses();
            jTableAutobuses.setRowSelectionInterval(sel, sel);
        } else {
            return;
        }
    }//GEN-LAST:event_jButton1ActionPerformed

    private void jButton4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton4ActionPerformed
        // Quitar persona del autobus
        indiceSelJTableAutobuses = jTableAutobuses.getSelectedRow();
        ArrayList<PersonaBean> lista = new ArrayList<PersonaBean>();
        for (int i = 0; i < jTablePersonasBus.getRowCount(); i++) {
            if ((boolean) jTablePersonasBus.getValueAt(i, 0)) {
                PersonaBean persona = new PersonaBean();
                persona.setIdPersona((String) jTablePersonasBus.getValueAt(i, 1));
                lista.add(persona);
            }
        }
        if (lista.size() < 1) {
            JOptionPane.showMessageDialog(this, "Debe seleccionar al menos una persona");
            return;

        }
        for (PersonaBean persona : lista) {
            GestionAutobusesBD.eliminaPersonasAutobus(persona.getIdPersona(), filtroViaje);
        }
        //cargaTablaPersonas(true);

        cargaTablaAutobuses();
        jTableAutobuses.setRowSelectionInterval(indiceSelJTableAutobuses, indiceSelJTableAutobuses);
    }//GEN-LAST:event_jButton4ActionPerformed

    private void jPanelPersonasSinHabitacionComponentShown(java.awt.event.ComponentEvent evt) {//GEN-FIRST:event_jPanelPersonasSinHabitacionComponentShown
        System.out.println("Perta√±a Personas sin habitaciones");
        cargaTablaPersonasSinHabitacion();
    }//GEN-LAST:event_jPanelPersonasSinHabitacionComponentShown

    private void jButton8ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton8ActionPerformed
        //Boton de a√±adir a habitacion de la ventana de personas que no tienen habitacion
        ArrayList<PersonaBean> lista = new ArrayList<PersonaBean>();
        for (int i = 0; i < jTablePersonasSinHabitacion.getRowCount(); i++) {
            if ((boolean) jTablePersonasSinHabitacion.getValueAt(i, 0)) {
                PersonaBean persona = new PersonaBean();
                persona.setIdPersona((String) jTablePersonasSinHabitacion.getValueAt(i, 1));
                lista.add(persona);
            }
        }
        if (lista.size() < 1) {
            JOptionPane.showMessageDialog(this, "Debe seleccionar al menos una persona");
            return;

        }
        JDialog frame = new JDialog((JFrame) null, "Guardar", true);
        frame.setDefaultCloseOperation(JDialog.HIDE_ON_CLOSE);
        filtroViaje = comboViaje.getModel().getElementAt(comboViaje.getSelectedIndex()).split(" - ")[0];
        OpcionesGuardarPersonaHabitacionModal ventana = new OpcionesGuardarPersonaHabitacionModal(filtroViaje);
        frame.getContentPane().add(ventana);
        frame.pack();
        frame.setLocationRelativeTo(this);
        frame.setVisible(true);

        String opcion = ventana.getBoton();
        if ("G".equals(opcion)) {
            HabitacionBean habitacion = new HabitacionBean(ventana.getIdHabitacion());
            int plazasLibre = habitacion.getCamasLibres();
            if (plazasLibre <= 0) {
                JOptionPane.showMessageDialog(this, "La habitaci√≥n seleccionada no tiene plazas libres");
                return;
            } else if (plazasLibre < lista.size()) {
                JOptionPane.showMessageDialog(this, "La habitaci√≥n seleccionada no tiene suficientes camas libres");
                return;
            } else {
                for (PersonaBean persona : lista) {
                    GestionHabitacionesBD.setHuespedHabitacion(ventana.getIdHabitacion(), persona.getIdPersona());
                }
            }
        }

        cargaTablaPersonasSinHabitacion();

    }//GEN-LAST:event_jButton8ActionPerformed

    int indiceSelJTableHabitaciones;
    private void jButton9ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton9ActionPerformed
        filtroViaje = comboViaje.getModel().getElementAt(comboViaje.getSelectedIndex()).split(" - ")[0];
        JDialog frame = new JDialog(this, "Gestion de habitaciones", true);
        frame.setDefaultCloseOperation(JDialog.HIDE_ON_CLOSE);
        HabitacionesMtto ventana = new HabitacionesMtto(HabitacionesMtto.nuevo, filtroViaje, comboViaje.getSelectedIndex(), this, "" + 0);
        frame.getContentPane().add(ventana);
        frame.pack();
        frame.setLocationRelativeTo(this);
        frame.setVisible(true);

    }//GEN-LAST:event_jButton9ActionPerformed

    private void jButton10ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton10ActionPerformed
        filtroViaje = comboViaje.getModel().getElementAt(comboViaje.getSelectedIndex()).split(" - ")[0];
        JDialog frame = new JDialog(this, "Gestion de autobuses", true);
        frame.setDefaultCloseOperation(JDialog.HIDE_ON_CLOSE);
        AutobusesMtto ventana = new AutobusesMtto(AutobusesMtto.nuevo, filtroViaje, comboViaje.getSelectedIndex(), this, "" + 0);
        frame.getContentPane().add(ventana);
        frame.pack();
        frame.setLocationRelativeTo(this);
        frame.setVisible(true);
    }//GEN-LAST:event_jButton10ActionPerformed

    private void jButton11ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton11ActionPerformed
        //Crear persona
        JDialog frame = new JDialog((JFrame) null, "Nuevo", true);
        frame.setDefaultCloseOperation(JDialog.HIDE_ON_CLOSE);
        OpcionesDePersona ventana = new OpcionesDePersona(OpcionesDePersona.nuevo);
        System.out.println(ventana.getTipoVentana());
        frame.getContentPane().add(ventana);
        frame.pack();
        frame.setLocationRelativeTo(this);
        frame.setVisible(true);
    }//GEN-LAST:event_jButton11ActionPerformed

    private void jPanelHabitacionesComponentShown(java.awt.event.ComponentEvent evt) {//GEN-FIRST:event_jPanelHabitacionesComponentShown
        System.out.println("Pesta√±a habitaciones");        // TODO add your handling code here:
        
        cargaTablaHabitaciones();
    }//GEN-LAST:event_jPanelHabitacionesComponentShown

    private void jComboHotelActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jComboHotelActionPerformed
        cargaTablaHabitaciones();

    }//GEN-LAST:event_jComboHotelActionPerformed

    private void jButton7ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton7ActionPerformed
        //quitar persona de habitacion
        indiceSelJTableHabitaciones = jTableHabitaciones.getSelectedRow();
        ArrayList<PersonaBean> lista = new ArrayList<PersonaBean>();
        for (int i = 0; i < jTablePersonasHabitacion.getRowCount(); i++) {
            if ((boolean) jTablePersonasHabitacion.getValueAt(i, 0)) {
                PersonaBean persona = new PersonaBean();
                persona.setIdPersona((String) jTablePersonasHabitacion.getValueAt(i, 1));
                lista.add(persona);
            }
        }
        if (lista.size() < 1) {
            JOptionPane.showMessageDialog(this, "Debe seleccionar al menos una persona");
            return;

        }
        for (PersonaBean persona : lista) {
            GestionHabitacionesBD.eliminaPersonasHabitacion(persona.getIdPersona(), filtroViaje);
        }
        //cargaTablaPersonas(true);

        cargaTablaHabitaciones();
        jTableHabitaciones.setRowSelectionInterval(indiceSelJTableHabitaciones, indiceSelJTableHabitaciones);
    }//GEN-LAST:event_jButton7ActionPerformed

    /**
     * Boton de a√±adir personas a la habitacion
     *
     * @param evt
     */
    private void jButton6ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton6ActionPerformed
        if (jTableHabitaciones.getSelectedRow() < 0) {
            JOptionPane.showMessageDialog(this, "Debe seleccionar una habitaci√≥n");
            return;
        }
        String idHabitacion = (String) jTableHabitaciones.getValueAt(jTableHabitaciones.getSelectedRow(), 0);
        HabitacionBean habitacion = new HabitacionBean(idHabitacion);
        habitacion.cargaDatos();
        JDialog frame = new JDialog(this, "Gestion de personas", true);
        frame.setDefaultCloseOperation(JDialog.HIDE_ON_CLOSE);
        ListadoPersonasAsignar ventana = new ListadoPersonasAsignar(habitacion.getIdViaje(), ListadoPersonasAsignar.AsignarAHabitacion);
        frame.getContentPane().add(ventana);
        frame.pack();
        frame.setLocationRelativeTo(this);
        frame.setVisible(true);
        //iniciarMisComponentes();
        if ("G".equals(ventana.getBoton())) {
            String mensaje = GestionHabitacionesBD.a√±adirHuespedHabitacion(ventana.getListaPersonasSelec(), idHabitacion);
            JOptionPane.showMessageDialog(this, mensaje);
            //cargarTablaPasajeros(idAutobus);
            int sel = jTableHabitaciones.getSelectedRow();
            cargaTablaHabitaciones();
            jTableHabitaciones.setRowSelectionInterval(sel, sel);
        } else {
            return;
        }
    }//GEN-LAST:event_jButton6ActionPerformed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        //Boton Buscar
        cargaTablaPersonas(true);
    }//GEN-LAST:event_jButton2ActionPerformed

    private void jButton12ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton12ActionPerformed
        //Limpiar
        jTextFiltro.setText("");
        cargaTablaPersonas(true);
    }//GEN-LAST:event_jButton12ActionPerformed

    private void jPanelListadoTotalComponentShown(java.awt.event.ComponentEvent evt) {//GEN-FIRST:event_jPanelListadoTotalComponentShown
        System.out.println("Pesta√±a listados");        // TODO add your handling code here:
        filtroViaje = comboViaje.getModel().getElementAt(comboViaje.getSelectedIndex()).split(" - ")[0];
        cargaTablaTotal();
        jComboAutobusesListadoTotal.setModel(GestionAutobusesBD.getModeloComboAutobusesConTodos(filtroViaje));
    }//GEN-LAST:event_jPanelListadoTotalComponentShown

    private void jButton13ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton13ActionPerformed

        String aPegar = "Apellidos\tNombre\tPoblaci√≥n\tEquipo\tAutobus\tHotel\tHabitaci√≥n\n";
        DefaultTableModel datosTabla = (DefaultTableModel) jTableListadoTotal.getModel();
        //Vector datos=datosTabla.getDataVector();
        for (int i = 0; i < datosTabla.getRowCount(); i++) {
            aPegar += datosTabla.getValueAt(i, 0) + "\t"
                    + datosTabla.getValueAt(i, 1) + "\t"
                    + datosTabla.getValueAt(i, 2) + "\t"
                    + datosTabla.getValueAt(i, 3) + "\t"
                    + datosTabla.getValueAt(i, 4) + "\t"
                    + datosTabla.getValueAt(i, 5) + "\t"
                    + datosTabla.getValueAt(i, 6) + "\n";

        }

        //String aPegar = "Este es el texto a pegar en el\t portap\tapeles";
        StringSelection ss = new StringSelection(aPegar);
        Toolkit tool = Toolkit.getDefaultToolkit();
        Clipboard clip = tool.getSystemClipboard();
        clip.setContents(ss, null);
        JOptionPane.showMessageDialog(this, "Datos copiados al portapapeles\nListo para pegar en Excel");

    }//GEN-LAST:event_jButton13ActionPerformed

    private void jComboEquipoListadoTotalActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jComboEquipoListadoTotalActionPerformed
        cargaTablaTotalEquipos();
    }//GEN-LAST:event_jComboEquipoListadoTotalActionPerformed

    private void jComboHotelesListadoTotalActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jComboHotelesListadoTotalActionPerformed
        cargaTablaTotalHoteles();        // TODO add your handling code here:
    }//GEN-LAST:event_jComboHotelesListadoTotalActionPerformed

    private void jComboAutobusesListadoTotalActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jComboAutobusesListadoTotalActionPerformed
        cargaTablaTotalAutobuses();
    }//GEN-LAST:event_jComboAutobusesListadoTotalActionPerformed

    private void jButton14ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton14ActionPerformed
        String aPegar = "Apellidos\tNombre\tPoblaci√≥n\tEquipo\tFecha nac.\tDNI\n";
        DefaultTableModel datosTabla = (DefaultTableModel) jTablePersonas.getModel();
        //Vector datos=datosTabla.getDataVector();
        for (int i = 0; i < datosTabla.getRowCount(); i++) {
            aPegar += datosTabla.getValueAt(i, 3) + "\t"
                    + datosTabla.getValueAt(i, 4) + "\t"
                    + datosTabla.getValueAt(i, 5) + "\t"
                    + datosTabla.getValueAt(i, 7) + "\t"
                    + datosTabla.getValueAt(i, 6) + "\t"
                    + datosTabla.getValueAt(i, 2) + "\n";

        }

        //String aPegar = "Este es el texto a pegar en el\t portap\tapeles";
        StringSelection ss = new StringSelection(aPegar);
        Toolkit tool = Toolkit.getDefaultToolkit();
        Clipboard clip = tool.getSystemClipboard();
        clip.setContents(ss, null);
        JOptionPane.showMessageDialog(this, "Datos copiados al portapapeles\nListo para pegar en Excel");
    }//GEN-LAST:event_jButton14ActionPerformed

    private void jButton15ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton15ActionPerformed
        //Cambiar de equipo
        filtroViaje = comboViaje.getModel().getElementAt(comboViaje.getSelectedIndex()).split(" - ")[0];
        ArrayList<PersonaBean> listaPersonasSelec = new ArrayList();
        for (int i = 0; i < jTablePersonas.getRowCount(); i++) {
            if ((boolean) jTablePersonas.getValueAt(i, 0)) {
                PersonaBean persona = new PersonaBean();
                persona.setIdPersona((String) jTablePersonas.getValueAt(i, 1));
                persona.setNombre((String) jTablePersonas.getValueAt(i, 4));
                persona.setApellidos((String) jTablePersonas.getValueAt(i, 3));
                persona.setIdTipoViajero((String) jTablePersonas.getValueAt(i, 6));
                listaPersonasSelec.add(persona);
            }
        }
        if(listaPersonasSelec.size()<1){
            JOptionPane.showMessageDialog(this, "Debe seleccionar al menos una persona");
            return;
        }
        
        
        JDialog frame = new JDialog((JFrame) null, "Guardar", true);
        frame.setDefaultCloseOperation(JDialog.HIDE_ON_CLOSE);
        OpcionesGuardarPersonaViajeModal ventana = new OpcionesGuardarPersonaViajeModal("2",GestionViajesBD.getViaje(filtroViaje).getNombre());
        frame.getContentPane().add(ventana);
        frame.pack();
        frame.setLocationRelativeTo(this);
        frame.setVisible(true);
        String boton = ventana.getBoton();
        String idEquipo;
        if("G".equalsIgnoreCase(boton)){
            idEquipo = ventana.getTipoViajero();
            boolean result=GestionViajesBD.cambiaEquipoPersona(listaPersonasSelec, idEquipo, filtroViaje);
            
        }
        cargaTablaPersonas(true);
            
        
    }//GEN-LAST:event_jButton15ActionPerformed

    private void jPanel1ComponentShown(java.awt.event.ComponentEvent evt) {//GEN-FIRST:event_jPanel1ComponentShown
        //Pesta√±a numero de peregrinaciones
        cargarTablaNumeroPeregrinaciones();
    }//GEN-LAST:event_jPanel1ComponentShown

    /**
     * Listener para hacer que al seleccionar una habitacion se muestre la tabla
     * con las persona que ya hay asignadas a la habitacion
     */
    private void ponListenerTablaHabitaciones() {
        JFrame padre = this;
        jTableHabitaciones.getSelectionModel().addListSelectionListener(new ListSelectionListener() {
            @Override
            public void valueChanged(ListSelectionEvent evento) {
                ListSelectionModel lsm = (ListSelectionModel) evento.getSource();
                int indice = lsm.getMinSelectionIndex();
                if (indice != -1) {
                    String idHabitacion = (String) jTableHabitaciones.getValueAt(indice, 0);
                    cargaTablaHuespedes(idHabitacion);
                }
            }
        });
        jTableHabitaciones.addMouseListener(new MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent e) {
                if (e.getClickCount() == 2) {
                    System.out.println("Se ha hecho doble click");

                    String idHabitacion = (String) jTableHabitaciones.getValueAt(jTableHabitaciones.getSelectedRow(), 0);
                    String idHotel = jComboHotel.getModel().getElementAt(jComboHotel.getSelectedIndex()).split(" - ")[0];
                    filtroViaje = comboViaje.getModel().getElementAt(comboViaje.getSelectedIndex()).split(" - ")[0];
                    //System.out.println("Id: "+id);

                    JDialog frame = new JDialog(padre, "Gestion de habitaciones", true);
                    frame.setDefaultCloseOperation(JDialog.HIDE_ON_CLOSE);
                    frame.getContentPane().add(new HabitacionesMtto(HabitacionesMtto.mtto, filtroViaje, comboViaje.getSelectedIndex(), (Principal) padre, idHabitacion));
                    frame.pack();
                    frame.setLocationRelativeTo(padre);
                    frame.setVisible(true);
                    int sel = jTableHabitaciones.getSelectedRow();
                    cargaTablaHabitaciones();
                    jTableHabitaciones.setRowSelectionInterval(sel, sel);
                }
            }
        });
    }

    int indiceSelJTableAutobuses;

    private void ponListenerTablaAutobuses() {
        jTableAutobuses.getSelectionModel().addListSelectionListener(new ListSelectionListener() {
            @Override
            public void valueChanged(ListSelectionEvent evento) {
                ListSelectionModel lsm = (ListSelectionModel) evento.getSource();
                int indice = lsm.getMinSelectionIndex();

                System.out.println("Indice seleccionado de jTableAutobuses: " + indiceSelJTableAutobuses);
                if (indice != -1) {
                    String idAutobus = (String) jTableAutobuses.getValueAt(indice, 0);
                    cargaTablaPasajeros(idAutobus);
                }
            }
        });
        JFrame padre = this;
        jTableAutobuses.addMouseListener(new MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent e) {
                if (e.getClickCount() == 1) {
                    /*String idPersona=(String)jTablePersonas.getModel().getValueAt(jTableAutobuses.getSelectedRow(),1);
                    cargarDatosAutobus(idPersona,filtroViaje);
                    cargarDatosHabitaciones(idPersona,filtroViaje);
                    System.out.println("Se ha hecho un click");*/
                }
                if (e.getClickCount() == 2) {
                    System.out.println("Se ha hecho doble click");
                    String idAutobus = (String) jTableAutobuses.getValueAt(jTableAutobuses.getSelectedRow(), 0);
                    System.out.println("Id: " + idAutobus);

                    JDialog frame = new JDialog(padre, "Gestion de autobuses", true);
                    frame.setDefaultCloseOperation(JDialog.HIDE_ON_CLOSE);
                    frame.getContentPane().add(new AutobusesMtto(AutobusesMtto.mtto, filtroViaje, comboViaje.getSelectedIndex(), (Principal) padre, idAutobus));
                    frame.pack();
                    frame.setLocationRelativeTo(padre);
                    frame.setVisible(true);
                    int sel = jTableAutobuses.getSelectedRow();
                    cargaTablaAutobuses();;
                    jTableAutobuses.setRowSelectionInterval(sel, sel);
                }
            }
        });
    }

    private void ponListenerTablaParsonas() {
        JFrame padre = this;
        jTablePersonas.addMouseListener(new MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent e) {
                if (e.getClickCount() == 1) {
                    String idPersona = (String) jTablePersonas.getValueAt(jTablePersonas.getSelectedRow(), 1);
                    cargarDatosAutobus(idPersona, filtroViaje);
                    cargarDatosHabitaciones(idPersona, filtroViaje);
                    System.out.println("Se ha hecho un click");
                }
                if (e.getClickCount() == 2) {
                    System.out.println("Se ha hecho doble click");
                    String id =(String) jTablePersonas.getValueAt(jTablePersonas.getSelectedRow(), 1);
                    //String id = (String) jTablePersonas.getModel().getValueAt(jTablePersonas.getSelectedRow(), 1);
                    System.out.println("Id: " + id);

                    JDialog frame = new JDialog(padre, "Gestion de personas", true);
                    frame.setDefaultCloseOperation(JDialog.HIDE_ON_CLOSE);
                    frame.getContentPane().add(new OpcionesDePersona(OpcionesDePersona.mtto, id));
                    frame.pack();
                    frame.setLocationRelativeTo(padre);
                    frame.setVisible(true);
                    int sel = jTablePersonas.getSelectedRow();
                    cargaTablaPersonas(true);
                    jTablePersonas.setRowSelectionInterval(sel, sel);
                }
            }
        });
    }

    private void cargarDatosAutobus(String idPersona, String filtroViaje) {
        System.out.println(new Object() {
        }.getClass().getEnclosingMethod().getName());

        DefaultTableModel datosTabla = (DefaultTableModel) jTableAutobusPersona.getModel();
        for (int i = datosTabla.getRowCount(); i > 0; i--) {
            datosTabla.removeRow(i - 1);
        }
        AutobusBean autobus = GestionAutobusesBD.getDatosAutobus(idPersona, filtroViaje);
        if (autobus == null) {
            //jLabelDescripcionAutobus.setVisible(true);
            jLabelDescripcionAutobus.setText("Sin autobus asignado");
            jLabelDescripcionAutobus.setForeground(Color.red);
            jLabelObservaciones.setText(" ");
            jLabelIdAutobusEtiqueta.setVisible(false);
            jLabelIdAutobus.setText(" ");
            //jTableAutobusPersona.setVisible(false);
            return;

        } else {
            jLabelDescripcionAutobus.setForeground(Color.BLACK);
            jTableAutobusPersona.setVisible(true);
            jLabelDescripcionAutobus.setVisible(true);
            jLabelDescripcionAutobus.setText(autobus.getDescripcion());
            jLabelObservaciones.setText(autobus.getObservaciones());
            jLabelObservaciones.setVisible(true);
            jLabelIdAutobus.setText(autobus.getIdAutobus());
            jLabelIdAutobus.setVisible(true);
            jLabelIdAutobusEtiqueta.setVisible(true);
        }
        ArrayList<PersonaBean> listaPersonas = autobus.getPasajeros();
        //ArrayList<PersonaBean> listaPersonas = autobus.getPasajeros();

        for (PersonaBean persona : listaPersonas) {
            datosTabla.addRow(new Object[]{
                "" + persona.getIdPersona(),
                persona.getDNI(),
                persona.getApellidos(),
                persona.getNombre(),
                persona.getFechaNacimiento()//,
            //GestionTiposViajeroBD.getTipoViajero(autobus.getIdViaje(), persona.getIdPersona()).getNombreTipo()
            });
        }
    }

    /**
     * Carga la tabla de personas de una habitacion de la pantalla de
     * peregrinacion
     *
     * @param idPersona
     * @param filtroViaje
     */
    private void cargarDatosHabitaciones(String idPersona, String filtroViaje) {
        System.out.println(new Object() {
        }.getClass().getEnclosingMethod().getName());

        DefaultTableModel datosTabla = (DefaultTableModel) jTableHabitacionesPersona.getModel();
        for (int i = datosTabla.getRowCount(); i > 0; i--) {
            datosTabla.removeRow(i - 1);
        }
        HabitacionBean habitacion = GestionHabitacionesBD.getDatosHabitacion(idPersona, filtroViaje);
        if (habitacion == null) {
            //jLabelDescripcionAutobus.setVisible(true);
            jLabelDesc1.setText("Sin habitaci√≥n asignada");
            jLabelDesc1.setForeground(Color.red);
            jLabelDesc2.setText(" ");
            jLabelObser.setText(" ");
            jLabelCamasLibres.setText(" ");
            //jTableAutobusPersona.setVisible(false);
            return;

        } else {
            jLabelDesc1.setForeground(Color.BLACK);
            jLabelDesc1.setVisible(true);
            jLabelDesc1.setText(habitacion.getDescripcion1());
            jLabelObser.setText(habitacion.getObservaciones());
            jLabelDesc2.setText(habitacion.getNombreHotel());
            jLabelCamasLibres.setText("Camas libres: " + habitacion.getCamasLibres());
        }
        ArrayList<PersonaBean> listaPersonas = habitacion.getHuespedes();
        //ArrayList<PersonaBean> listaPersonas = autobus.getPasajeros();

        for (PersonaBean persona : listaPersonas) {
            datosTabla.addRow(new Object[]{
                "" + persona.getIdPersona(),
                persona.getDNI(),
                persona.getApellidos(),
                persona.getNombre(),
                persona.getFechaNacimiento()//,
            //GestionTiposViajeroBD.getTipoViajero(autobus.getIdViaje(), persona.getIdPersona()).getNombreTipo()
            });
        }
    }

    private void cargaTablaPasajeros(String idAutobus) {
        System.out.println(new Object() {
        }.getClass().getEnclosingMethod().getName());
        AutobusBean autobus = new AutobusBean();
        autobus.setIdAutobus(idAutobus);
        autobus.cargaDatos();
        ArrayList<PersonaBean> listaPersonas = autobus.getPasajeros();
        DefaultTableModel datosTabla = (DefaultTableModel) jTablePersonasBus.getModel();
        for (int i = datosTabla.getRowCount(); i > 0; i--) {
            datosTabla.removeRow(i - 1);
        }
        for (PersonaBean persona : listaPersonas) {
            datosTabla.addRow(new Object[]{
                false,
                "" + persona.getIdPersona(),
                persona.getDNI(),
                persona.getApellidos(),
                persona.getNombre(),
                GestionTiposViajeroBD.getTipoViajero(autobus.getIdViaje(), autobus.getIdViaje(),
                persona.getIdPersona()).getNombreTipo()
            });
        }
        jLabelTotalPersonasAutobus.setText("" + listaPersonas.size());
    }

    
    private void cargaTablaHuespedes(String idHabitacion) {
        System.out.println(new Object() {
        }.getClass().getEnclosingMethod().getName());
        HabitacionBean habitacion = new HabitacionBean();
        habitacion.setIdHabitacion(idHabitacion);
        habitacion.cargaDatos();
        ArrayList<PersonaBean> listaPersonas = habitacion.getHuespedes();
        limpiarTablaHuespedes();
        DefaultTableModel datosTabla = (DefaultTableModel) jTablePersonasHabitacion.getModel();
        
        for (PersonaBean persona : listaPersonas) {
            datosTabla.addRow(new Object[]{
                false,
                "" + persona.getIdPersona(),
                persona.getDNI(),
                persona.getApellidos(),
                persona.getNombre(),
                GestionTiposViajeroBD.getTipoViajero(habitacion.getIdViaje(), habitacion.getIdViaje(), persona.getIdPersona()).getNombreTipo()
            });
        }
    }

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Principal.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Principal.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Principal.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Principal.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Principal().setVisible(true);

            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JComboBox<String> comboTipoViajero;
    private javax.swing.JComboBox<String> comboViaje;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton10;
    private javax.swing.JButton jButton11;
    private javax.swing.JButton jButton12;
    private javax.swing.JButton jButton13;
    private javax.swing.JButton jButton14;
    private javax.swing.JButton jButton15;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton3;
    private javax.swing.JButton jButton4;
    private javax.swing.JButton jButton5;
    private javax.swing.JButton jButton6;
    private javax.swing.JButton jButton7;
    private javax.swing.JButton jButton8;
    private javax.swing.JButton jButton9;
    private javax.swing.JButton jButtonAgregaPersonas;
    private javax.swing.JButton jButtonEliminaDeLaPeregrinacion;
    private javax.swing.JComboBox<String> jComboAutobusesListadoTotal;
    private javax.swing.JComboBox<String> jComboEquipoListadoTotal;
    private javax.swing.JComboBox<String> jComboHotel;
    private javax.swing.JComboBox<String> jComboHotelesListadoTotal;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel15;
    private javax.swing.JLabel jLabel16;
    private javax.swing.JLabel jLabel17;
    private javax.swing.JLabel jLabel18;
    private javax.swing.JLabel jLabel19;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel20;
    private javax.swing.JLabel jLabel21;
    private javax.swing.JLabel jLabel22;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JLabel jLabelCamasLibres;
    private javax.swing.JLabel jLabelDesc1;
    private javax.swing.JLabel jLabelDesc2;
    private javax.swing.JLabel jLabelDescripcionAutobus;
    private javax.swing.JLabel jLabelIdAutobus;
    private javax.swing.JLabel jLabelIdAutobusEtiqueta;
    private javax.swing.JLabel jLabelListadoTotal;
    private javax.swing.JLabel jLabelNumPeregri;
    private javax.swing.JLabel jLabelObser;
    private javax.swing.JLabel jLabelObservaciones;
    private javax.swing.JLabel jLabelTotalBuses;
    private javax.swing.JLabel jLabelTotalHabitaciones;
    private javax.swing.JLabel jLabelTotalListaPersonasSinBus;
    private javax.swing.JLabel jLabelTotalPagPeregri;
    private javax.swing.JLabel jLabelTotalPersonasAutobus;
    private javax.swing.JLabel jLabelTotalPersonasSinHab;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel5;
    private javax.swing.JPanel jPanelAutobuses;
    private javax.swing.JPanel jPanelHabitaciones;
    private javax.swing.JPanel jPanelListadoTotal;
    private javax.swing.JPanel jPanelPeregrinaciones;
    private javax.swing.JPanel jPanelPersonasSinAutobus;
    private javax.swing.JPanel jPanelPersonasSinHabitacion;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane10;
    private javax.swing.JScrollPane jScrollPane11;
    private javax.swing.JScrollPane jScrollPane12;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JScrollPane jScrollPane4;
    private javax.swing.JScrollPane jScrollPane5;
    private javax.swing.JScrollPane jScrollPane6;
    private javax.swing.JScrollPane jScrollPane7;
    private javax.swing.JScrollPane jScrollPane8;
    private javax.swing.JScrollPane jScrollPane9;
    private javax.swing.JTabbedPane jTabbedPane1;
    private javax.swing.JTable jTableAutobusPersona;
    private javax.swing.JTable jTableAutobuses;
    private javax.swing.JTable jTableHabitaciones;
    private javax.swing.JTable jTableHabitacionesPersona;
    private javax.swing.JTable jTableListadoTotal;
    private javax.swing.JTable jTableNumeroPeregrinaciones;
    private javax.swing.JTable jTablePeregrinaciones;
    private javax.swing.JTable jTablePersonas;
    private javax.swing.JTable jTablePersonasBus;
    private javax.swing.JTable jTablePersonasHabitacion;
    private javax.swing.JTable jTablePersonasSinAutobus;
    private javax.swing.JTable jTablePersonasSinHabitacion;
    private javax.swing.JTextField jTextFiltro;
    private javax.swing.JTextField jTextNumPeregriAnt2022;
    private javax.swing.JLabel labelTotal;
    // End of variables declaration//GEN-END:variables

    private void cargaTablaPersonas(boolean tipo) {
        System.out.println(new Object() {
        }.getClass().getEnclosingMethod().getName());
        filtroViaje = comboViaje.getModel().getElementAt(comboViaje.getSelectedIndex()).split(" - ")[0];
        filtroTipoViajero = comboTipoViajero.getModel().getElementAt(comboTipoViajero.getSelectedIndex()).split(" - ")[0];
        listaPersonas = GestionPersonasBD.getListaPersonas(tipo, filtroViaje, filtroTipoViajero, jTextFiltro.getText());
        DefaultTableModel datosTabla = (DefaultTableModel) jTablePersonas.getModel();
        for (int i = datosTabla.getRowCount(); i > 0; i--) {
            datosTabla.removeRow(i - 1);
        }
        for (PersonaBean persona : listaPersonas) {
            datosTabla.addRow(new Object[]{
                false,
                "" + persona.getIdPersona(),
                persona.getDNI(),
                persona.getApellidos(),
                persona.getNombre(),
                persona.getLocalidad(),
                persona.getFechaNacimiento(),
                GestionTiposViajeroBD.getTipoViajero(filtroViaje, filtroViaje, persona.getIdPersona()).getNombreTipo()
            });
        }
        labelTotal.setText("" + listaPersonas.size());
    }

    public void cargaTablaAutobuses() {
        System.out.println(new Object() {
        }.getClass().getEnclosingMethod().getName());
        DefaultTableModel datosTabla = (DefaultTableModel) jTablePersonasBus.getModel();
        for (int i = datosTabla.getRowCount(); i > 0; i--) {
            datosTabla.removeRow(i - 1);
        }

        filtroViaje = comboViaje.getModel().getElementAt(comboViaje.getSelectedIndex()).split(" - ")[0];
        filtroTipoViajero = comboTipoViajero.getModel().getElementAt(comboTipoViajero.getSelectedIndex()).split(" - ")[0];
        listaAutobuses = GestionAutobusesBD.getListaAutobuses(filtroViaje);
        datosTabla = (DefaultTableModel) jTableAutobuses.getModel();
        for (int i = datosTabla.getRowCount(); i > 0; i--) {
            datosTabla.removeRow(i - 1);
        }
        for (AutobusBean autobus : listaAutobuses) {
            datosTabla.addRow(new Object[]{
                autobus.getIdAutobus(),
                autobus.getDescripcion(),
                autobus.getObservaciones(),
                autobus.getPlazasLibres(true),
                autobus.getPlazasLibres(false),
                autobus.getIdAutobus()
            });
        }
        jLabelListadoTotal.setText("" + listaAutobuses.size());
    }

    /**
     * Carga la tabla de habitacion y borra la table de personas de la
     * habitacion
     *
     * @param idHotel Si el id es 0 mostrar√° todos los hoteles
     */
    public void cargaTablaHabitaciones() {
        System.out.println(new Object() {
        }.getClass().getEnclosingMethod().getName());
        limpiarTablaHuespedes();
        DefaultTableModel datosTabla = (DefaultTableModel) jTableHabitacionesPersona.getModel();
        for (int i = datosTabla.getRowCount(); i > 0; i--) {
            datosTabla.removeRow(i - 1);
        }
        String idHotel = jComboHotel.getModel().getElementAt(jComboHotel.getSelectedIndex()).split(" - ")[0];
        filtroViaje = comboViaje.getModel().getElementAt(comboViaje.getSelectedIndex()).split(" - ")[0];
        //filtroTipoViajero = comboTipoViajero.getModel().getElementAt(comboTipoViajero.getSelectedIndex()).split(" - ")[0];
        listaHabitaciones = GestionHabitacionesBD.getListaHabitaciones(filtroViaje, idHotel);
        datosTabla = (DefaultTableModel) jTableHabitaciones.getModel();
        for (int i = datosTabla.getRowCount(); i > 0; i--) {
            datosTabla.removeRow(i - 1);
        }
        for (HabitacionBean habitacion : listaHabitaciones) {
            datosTabla.addRow(new Object[]{
                habitacion.getIdHabitacion(),
                habitacion.getDescripcion1(),
                habitacion.getNombreHotel(),
                habitacion.getObservaciones(),
                habitacion.getCamasTotales(),
                habitacion.getCamasLibres()
            });
        }
        jLabelTotalHabitaciones.setText("" + listaHabitaciones.size());
    }

    private void cargaTablaPersonasSinAutobus() {
        System.out.println(new Object() {
        }.getClass().getEnclosingMethod().getName());
        filtroViaje = comboViaje.getModel().getElementAt(comboViaje.getSelectedIndex()).split(" - ")[0];
        listaPersonas = GestionPersonasBD.getListaPersonasSinAutobus(filtroViaje, "0", "");
        DefaultTableModel datosTabla = (DefaultTableModel) jTablePersonasSinAutobus.getModel();
        for (int i = datosTabla.getRowCount(); i > 0; i--) {
            datosTabla.removeRow(i - 1);
        }
        for (PersonaBean persona : listaPersonas) {
            datosTabla.addRow(new Object[]{
                false,
                "" + persona.getIdPersona(),
                persona.getDNI(),
                persona.getApellidos(),
                persona.getNombre(),
                persona.getFechaNacimiento(),
                //GestionTiposViajeroBD.getTipoViajero(filtroViaje,filtroViaje, persona.getIdPersona()).getNombreTipo()
                persona.getNombreCortoTipoViajero(),
                persona.getIdTipoViajero()
            });
        }
        jLabelTotalListaPersonasSinBus.setText("" + listaPersonas.size());
    }

    private void cargaTablaPersonasSinHabitacion() {
        System.out.println(new Object() {
        }.getClass().getEnclosingMethod().getName());
        filtroViaje = comboViaje.getModel().getElementAt(comboViaje.getSelectedIndex()).split(" - ")[0];
        listaPersonas = GestionPersonasBD.getListaPersonasSinHabitacion(filtroViaje, "0", "");
        DefaultTableModel datosTabla = (DefaultTableModel) jTablePersonasSinHabitacion.getModel();
        for (int i = datosTabla.getRowCount(); i > 0; i--) {
            datosTabla.removeRow(i - 1);
        }
        for (PersonaBean persona : listaPersonas) {
            datosTabla.addRow(new Object[]{
                false,
                "" + persona.getIdPersona(),
                persona.getDNI(),
                persona.getApellidos(),
                persona.getNombre(),
                persona.getFechaNacimiento(),
                GestionTiposViajeroBD.getTipoViajero(filtroViaje, filtroViaje, persona.getIdPersona()).getNombreTipo()
            });
        }
        jLabelTotalPersonasSinHab.setText("" + listaPersonas.size());
    }

    private void prepararVistaPasajerosAutobus() {
        jPanel3.setPreferredSize(new Dimension(406, 323));
        jLabelDescripcionAutobus.setText(" ");
        jLabelObservaciones.setText(" ");
        jLabelIdAutobusEtiqueta.setVisible(false);
        jLabelIdAutobus.setText(" ");
        //jTableAutobusPersona.setText("");
        DefaultTableModel datosTabla = (DefaultTableModel) jTableAutobusPersona.getModel();
        for (int i = datosTabla.getRowCount(); i > 0; i--) {
            datosTabla.removeRow(i - 1);
        }
    }

    private void vaciarTabla(DefaultTableModel model) {
        for (int i = model.getRowCount(); i > 0; i--) {
            model.removeRow(i - 1);
        }
    }

    private void cargaTablaTotal() {
        System.out.println(new Object() {
        }.getClass().getEnclosingMethod().getName());

        filtroViaje = comboViaje.getModel().getElementAt(comboViaje.getSelectedIndex()).split(" - ")[0];
        //filtroTipoViajero = comboTipoViajero.getModel().getElementAt(comboTipoViajero.getSelectedIndex()).split(" - ")[0];
        ArrayList resultado = GestionPersonasBD.getListadoCompleto(filtroViaje);
        DefaultTableModel datosTabla = (DefaultTableModel) jTableListadoTotal.getModel();
        for (int i = datosTabla.getRowCount(); i > 0; i--) {
            datosTabla.removeRow(i - 1);
        }

        for (int i = 0; i < resultado.size(); i++) {
            datosTabla.addRow((Object[]) resultado.get(i));
        }
        jLabelListadoTotal.setText("" + resultado.size());

    }

    private void cargaTablaTotalEquipos() {
        System.out.println(new Object() {
        }.getClass().getEnclosingMethod().getName());

        filtroViaje = comboViaje.getModel().getElementAt(comboViaje.getSelectedIndex()).split(" - ")[0];
        filtroTipoViajero = jComboEquipoListadoTotal.getModel().getElementAt(jComboEquipoListadoTotal.getSelectedIndex()).split(" - ")[0];
        if ("0".equals(filtroTipoViajero)) {
            cargaTablaTotal();
        } else {
            ArrayList resultado = GestionPersonasBD.getListadoCompletoEquipos(filtroViaje, filtroTipoViajero);
            DefaultTableModel datosTabla = (DefaultTableModel) jTableListadoTotal.getModel();
            for (int i = datosTabla.getRowCount(); i > 0; i--) {
                datosTabla.removeRow(i - 1);
            }

            for (int i = 0; i < resultado.size(); i++) {
                datosTabla.addRow((Object[]) resultado.get(i));
            }
            jLabelListadoTotal.setText("" + resultado.size());
        }

    }

    private void cargaTablaTotalHoteles() {
        System.out.println(new Object() {
        }.getClass().getEnclosingMethod().getName());

        filtroViaje = comboViaje.getModel().getElementAt(comboViaje.getSelectedIndex()).split(" - ")[0];
        String filtroHotel = jComboHotelesListadoTotal.getModel().getElementAt(jComboHotelesListadoTotal.getSelectedIndex()).split(" - ")[0];
        if ("0".equalsIgnoreCase(filtroHotel)) {
            cargaTablaTotal();
        } else {
            ArrayList resultado = GestionPersonasBD.getListadoCompletoHoteles(filtroViaje, filtroHotel);
            DefaultTableModel datosTabla = (DefaultTableModel) jTableListadoTotal.getModel();
            for (int i = datosTabla.getRowCount(); i > 0; i--) {
                datosTabla.removeRow(i - 1);
            }

            for (int i = 0; i < resultado.size(); i++) {
                datosTabla.addRow((Object[]) resultado.get(i));
            }
            jLabelListadoTotal.setText("" + resultado.size());
        }
    }
    private void cargaTablaTotalAutobuses() {
        System.out.println(new Object() {
        }.getClass().getEnclosingMethod().getName());

        filtroViaje = comboViaje.getModel().getElementAt(comboViaje.getSelectedIndex()).split(" - ")[0];
        String filtroAutobus = jComboAutobusesListadoTotal.getModel().getElementAt(jComboAutobusesListadoTotal.getSelectedIndex()).split(" - ")[0];
        if ("0".equalsIgnoreCase(filtroAutobus)) {
            cargaTablaTotal();
        } else {
            ArrayList resultado = GestionPersonasBD.getListadoCompletoAutobuses(filtroViaje, filtroAutobus);
            DefaultTableModel datosTabla = (DefaultTableModel) jTableListadoTotal.getModel();
            for (int i = datosTabla.getRowCount(); i > 0; i--) {
                datosTabla.removeRow(i - 1);
            }

            for (int i = 0; i < resultado.size(); i++) {
                datosTabla.addRow((Object[]) resultado.get(i));
            }
            jLabelListadoTotal.setText("" + resultado.size());
        }
    }

    private void limpiarTablaHuespedes() {
        DefaultTableModel datosTabla = (DefaultTableModel) jTablePersonasHabitacion.getModel();
        for (int i = datosTabla.getRowCount(); i > 0; i--) {
            datosTabla.removeRow(i - 1);
        }
    }

    private void cargarTablaNumeroPeregrinaciones() {
        jTextNumPeregriAnt2022.setText("");
        jLabelNumPeregri.setText("");
        System.out.println(new Object() {
        }.getClass().getEnclosingMethod().getName());
        
        ArrayList<PersonaBean> lista = GestionPersonasBD.getNumeroPeregrinaciones();
        DefaultTableModel datosTabla = (DefaultTableModel) jTableNumeroPeregrinaciones.getModel();
        for (int i = datosTabla.getRowCount(); i > 0; i--) {
            datosTabla.removeRow(i - 1);
        }
        for (PersonaBean persona : lista) {
            datosTabla.addRow(new Object[]{
                "" + persona.getIdPersona(),
                persona.getApellidos(),
                persona.getNombre(),
                persona.getNumPeregrinaciones()
            });
        }
        
        jLabelTotalPagPeregri.setText(""+lista.size());
        
    }
    
    private void ponListenerTablaNumeroPeregrinaciones() {
        JFrame padre = this;
        jTableNumeroPeregrinaciones.addMouseListener(new MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent e) {
                String idPersona = (String) jTableNumeroPeregrinaciones.getValueAt(jTableNumeroPeregrinaciones.getSelectedRow(), 0);
                cargarDatosNumeroPeregrinaciones(idPersona);
                System.out.println("Se ha hecho un click");
            }
        });
    }
    private void cargarDatosNumeroPeregrinaciones(String idPersona){
        ArrayList<String> lista = GestionPersonasBD.getListaPeregrinacionespersona(idPersona);
        DefaultTableModel datosTabla = (DefaultTableModel) jTablePeregrinaciones.getModel();
        for (int i = datosTabla.getRowCount(); i > 0; i--) {
            datosTabla.removeRow(i - 1);
        }
        for (String  nombre : lista) {
            datosTabla.addRow(new Object[]{
                nombre
            });
        }
        int ant=GestionPersonasBD.getNumPeregrinacionesAnt2022(idPersona);
        jTextNumPeregriAnt2022.setText(""+ant);
        jLabelNumPeregri.setText(""+(lista.size()+ant));
    }

}
