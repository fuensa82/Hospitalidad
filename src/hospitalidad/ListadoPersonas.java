/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package hospitalidad;

import hospitalidad.Gestores.GestionPersonasBD;
import hospitalidad.Gestores.GestionViajesBD;
import hospitalidad.beans.PersonaBean;
import java.awt.Window;
import java.awt.event.MouseAdapter;
import java.text.Collator;
import java.util.ArrayList;
import java.util.Comparator;
import java.util.Locale;
import javax.swing.JDialog;
import javax.swing.JFrame;
import javax.swing.JOptionPane;
import javax.swing.JTable;
import javax.swing.SwingUtilities;
import javax.swing.event.ListSelectionEvent;
import javax.swing.event.ListSelectionListener;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author vPalomo
 */
public class ListadoPersonas extends javax.swing.JPanel {

    private boolean seleccionFila = false;
    private ArrayList<PersonaBean> listaPersona;

    /**
     * Creates new form MantenimientoPersonas
     */
    public ListadoPersonas() {
        initComponents();
        cargarListaPersonas();
        ponListenerTabla(jTablePersonas);
    }

    private void cargarListaPersonas() {
        cargarListaPersonasFiltro("");
    }
    private void cargarListaPersonasFiltro(String filtro) {
        if("".equals(filtro)){
            listaPersona = GestionPersonasBD.getListaPersonas(true);
        }else{
            listaPersona = GestionPersonasBD.getListaPersonasTotalesFiltro(true, filtro);
        }
        listaPersona.sort(new Comparator<PersonaBean>() {
            @Override
            public int compare(PersonaBean p1, PersonaBean p2) {
                Collator c = Collator.getInstance(new Locale("es"));
                c.setStrength(Collator.PRIMARY);
                return c.compare(p1.getApellidos(), p2.getApellidos());
            }
        });
        //Primero se borra todo el contenido de la tabla
        DefaultTableModel datosTabla = (DefaultTableModel) jTablePersonas.getModel();
        for (int i = datosTabla.getRowCount(); i > 0; i--) {
            datosTabla.removeRow(i - 1);
        }
        listaPersona.forEach((persona) -> {
            datosTabla.addRow(new Object[]{
                false,
                persona.getApellidos(),
                persona.getNombre(),
                persona.getDNI(),
                persona.getIdPersona()
            });
        });
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        jTablePersonas = new javax.swing.JTable();
        jButton1 = new javax.swing.JButton();
        jButton2 = new javax.swing.JButton();
        jButton3 = new javax.swing.JButton();
        jButton6 = new javax.swing.JButton();
        jTextFiltro = new javax.swing.JTextField();

        jTablePersonas.setAutoCreateRowSorter(true);
        jTablePersonas.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Sel.", "Apellidos", "Nombre", "DNI", "Id"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Boolean.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class
            };
            boolean[] canEdit = new boolean [] {
                true, false, false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jTablePersonas.getTableHeader().setReorderingAllowed(false);
        jScrollPane1.setViewportView(jTablePersonas);
        if (jTablePersonas.getColumnModel().getColumnCount() > 0) {
            jTablePersonas.getColumnModel().getColumn(0).setPreferredWidth(15);
            jTablePersonas.getColumnModel().getColumn(1).setPreferredWidth(250);
            jTablePersonas.getColumnModel().getColumn(2).setPreferredWidth(175);
            jTablePersonas.getColumnModel().getColumn(3).setPreferredWidth(50);
            jTablePersonas.getColumnModel().getColumn(4).setPreferredWidth(25);
        }

        jButton1.setText("Salir");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jButton2.setText("Asignar peregrinaci√≥n");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        jButton3.setText("Crear persona");
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });

        jButton6.setText("Buscar");
        jButton6.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton6ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 682, Short.MAX_VALUE)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(jButton3)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jButton2)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jButton1))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jTextFiltro, javax.swing.GroupLayout.PREFERRED_SIZE, 245, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(jButton6)
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(11, 11, 11)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButton6)
                    .addComponent(jTextFiltro, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 413, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButton1)
                    .addComponent(jButton2)
                    .addComponent(jButton3))
                .addContainerGap())
        );
    }// </editor-fold>//GEN-END:initComponents

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        //Asignar peregrinacion
        if(!seleccionFila){
            JOptionPane.showMessageDialog(this, "Primero debe seleccionar al menos una persona");
            return;
        }
        //DefaultTableModel datosTabla = (DefaultTableModel) jTablePersonas.getModel();
        ArrayList<PersonaBean> listaPersonas = new ArrayList<PersonaBean>();
        for (int i = 0; i < jTablePersonas.getRowCount(); i++) {
            if ((boolean) jTablePersonas.getValueAt(i, 0)) {
                PersonaBean persona = new PersonaBean();
                persona.setIdPersona((String) jTablePersonas.getValueAt(i, 4));
                persona.setNombre((String) jTablePersonas.getValueAt(i, 2));
                persona.setApellidos((String) jTablePersonas.getValueAt(i, 1));
                listaPersonas.add(persona);
            }
        }
        if(listaPersonas.size()<1){
            JOptionPane.showMessageDialog(this, "Debe seleccionar al menos una persona");
            return;
        
        }
        JDialog frame = new JDialog((JFrame) null, "Guardar", true);
        frame.setDefaultCloseOperation(JDialog.HIDE_ON_CLOSE);
        OpcionesGuardarPersonaViajeModal ventana = new OpcionesGuardarPersonaViajeModal();
        frame.getContentPane().add(ventana);
        frame.pack();
        frame.setLocationRelativeTo(this);
        frame.setVisible(true);

        String opcion = ventana.getBoton();

        if ("G".equalsIgnoreCase(opcion)) {
            System.out.println("Guardando");
            String mensaje=GestionViajesBD.guardaPersonasPeregrinacionUnitaria(listaPersonas, ventana.getPeregrinacion(), ventana.getTipoViajero());
            JOptionPane.showMessageDialog(this, mensaje);
            Window w = SwingUtilities.getWindowAncestor(this);
            w.setVisible(false);
        }
        //
        
    }//GEN-LAST:event_jButton2ActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        Window w = SwingUtilities.getWindowAncestor(this);
        w.setVisible(false);
    }//GEN-LAST:event_jButton1ActionPerformed

    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed
        JDialog frame = new JDialog((JFrame) null, "Nuevo", true);
        frame.setDefaultCloseOperation(JDialog.HIDE_ON_CLOSE);
        OpcionesDePersona ventana = new OpcionesDePersona(OpcionesDePersona.nuevo);
        System.out.println(ventana.getTipoVentana());
        frame.getContentPane().add(ventana);
        frame.pack();
        frame.setLocationRelativeTo(this);
        frame.setVisible(true);
        cargarListaPersonas();
    }//GEN-LAST:event_jButton3ActionPerformed

    private void jButton6ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton6ActionPerformed
        cargarListaPersonasFiltro(jTextFiltro.getText());
    }//GEN-LAST:event_jButton6ActionPerformed

    private void ponListenerTabla(JTable tabla) {
        tabla.getSelectionModel().addListSelectionListener(new ListSelectionListener() {
            @Override
            public void valueChanged(ListSelectionEvent evento) {
                System.out.println("Seleccionado");
                seleccionFila = true;
            }
        });
        
        
        JFrame padre = (JFrame) this.getParent();
        jTablePersonas.addMouseListener(new MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent e) {
                
                if (e.getClickCount() == 2) {
                    System.out.println("Se ha hecho doble click");
                    String id = (String) jTablePersonas.getModel().getValueAt(jTablePersonas.getSelectedRow(), 4);
                    System.out.println("Id: " + id);

                    JDialog frame = new JDialog(padre, "Gestion de personas", true);
                    frame.setDefaultCloseOperation(JDialog.HIDE_ON_CLOSE);
                    frame.getContentPane().add(new OpcionesDePersona(OpcionesDePersona.mtto, id));
                    frame.pack();
                    frame.setLocationRelativeTo(padre);
                    frame.setVisible(true);
                    int sel = jTablePersonas.getSelectedRow();
                    cargarListaPersonas();
                    jTablePersonas.setRowSelectionInterval(sel, sel);
                }
            }
        });
        
        
        
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton3;
    private javax.swing.JButton jButton6;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable jTablePersonas;
    private javax.swing.JTextField jTextFiltro;
    // End of variables declaration//GEN-END:variables
}
