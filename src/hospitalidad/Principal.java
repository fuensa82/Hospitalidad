/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package hospitalidad;

import hospitalidad.Gestores.GestionAutobusesBD;
import hospitalidad.Gestores.GestionPersonasBD;
import hospitalidad.Gestores.GestionViajesBD;
import hospitalidad.Gestores.GestionTiposViajeroBD;
import hospitalidad.beans.AutobusBean;
import hospitalidad.beans.PersonaBean;
import java.awt.Window;
import java.util.ArrayList;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JDialog;
import javax.swing.JFrame;
import javax.swing.JOptionPane;
import javax.swing.ListSelectionModel;
import javax.swing.SwingUtilities;
import javax.swing.UIManager;
import javax.swing.UnsupportedLookAndFeelException;
import javax.swing.event.ListSelectionEvent;
import javax.swing.event.ListSelectionListener;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author vPalomo
 */
public class Principal extends javax.swing.JFrame {

    private ArrayList<PersonaBean> listaPersonas;
    private ArrayList<PersonaBean> listaPersonasSinAutobus;
    private ArrayList<AutobusBean> listaAutobuses;
    private String filtroViaje;
    private String filtroTipoViajero;
    
    /**
     * Creates new form Principal
     */
    public Principal() {
        try {
            UIManager.setLookAndFeel("com.sun.java.swing.plaf.windows.WindowsLookAndFeel");
        } catch (ClassNotFoundException ex) {
            Logger.getLogger(Principal.class.getName()).log(Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            Logger.getLogger(Principal.class.getName()).log(Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            Logger.getLogger(Principal.class.getName()).log(Level.SEVERE, null, ex);
        } catch (UnsupportedLookAndFeelException ex) {
            Logger.getLogger(Principal.class.getName()).log(Level.SEVERE, null, ex);
        }
        initComponents();
        ponListenerTablaAutobuses();
     
        cargaTablaPersonas(true);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel2 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jTabbedPane1 = new javax.swing.JTabbedPane();
        jPanelPeregrinaciones = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        tablaPersonas = new javax.swing.JTable();
        jPanel3 = new javax.swing.JPanel();
        jPanel5 = new javax.swing.JPanel();
        jButtonEliminaDeLaPeregrinacion = new javax.swing.JButton();
        jButtonAgregaPersonas = new javax.swing.JButton();
        jPanelAutobuses = new javax.swing.JPanel();
        jPanel6 = new javax.swing.JPanel();
        jScrollPane2 = new javax.swing.JScrollPane();
        jTableAutobuses = new javax.swing.JTable();
        jScrollPane4 = new javax.swing.JScrollPane();
        tablaPersonasBus = new javax.swing.JTable();
        jPanelPersonasSinAutobus = new javax.swing.JPanel();
        jScrollPane3 = new javax.swing.JScrollPane();
        jTablePersonasSinAutobus = new javax.swing.JTable();
        jButton5 = new javax.swing.JButton();
        jButtonCrearPersona = new javax.swing.JButton();
        jButton2 = new javax.swing.JButton();
        jButton3 = new javax.swing.JButton();
        comboViaje = new javax.swing.JComboBox<>();
        jLabel2 = new javax.swing.JLabel();
        comboTipoViajero = new javax.swing.JComboBox<>();
        jLabel3 = new javax.swing.JLabel();
        jTextField1 = new javax.swing.JTextField();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jLabel1.setText("Hospitalidad de Toledo");

        jTabbedPane1.addComponentListener(new java.awt.event.ComponentAdapter() {
            public void componentShown(java.awt.event.ComponentEvent evt) {
                jTabbedPane1ComponentShown(evt);
            }
        });

        jPanelPeregrinaciones.addComponentListener(new java.awt.event.ComponentAdapter() {
            public void componentShown(java.awt.event.ComponentEvent evt) {
                jPanelPeregrinacionesComponentShown(evt);
            }
        });

        tablaPersonas.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null}
            },
            new String [] {
                "Sel", "Id", "DNI", "Nombre", "Fecha Nac.", "Tipo"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Boolean.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class
            };
            boolean[] canEdit = new boolean [] {
                true, false, false, false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        tablaPersonas.setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);
        tablaPersonas.getTableHeader().setResizingAllowed(false);
        tablaPersonas.getTableHeader().setReorderingAllowed(false);
        jScrollPane1.setViewportView(tablaPersonas);
        if (tablaPersonas.getColumnModel().getColumnCount() > 0) {
            tablaPersonas.getColumnModel().getColumn(0).setResizable(false);
            tablaPersonas.getColumnModel().getColumn(0).setPreferredWidth(5);
            tablaPersonas.getColumnModel().getColumn(1).setResizable(false);
            tablaPersonas.getColumnModel().getColumn(1).setPreferredWidth(5);
            tablaPersonas.getColumnModel().getColumn(2).setResizable(false);
            tablaPersonas.getColumnModel().getColumn(2).setPreferredWidth(20);
            tablaPersonas.getColumnModel().getColumn(3).setResizable(false);
            tablaPersonas.getColumnModel().getColumn(4).setResizable(false);
            tablaPersonas.getColumnModel().getColumn(4).setPreferredWidth(20);
            tablaPersonas.getColumnModel().getColumn(5).setResizable(false);
            tablaPersonas.getColumnModel().getColumn(5).setPreferredWidth(20);
        }

        jPanel3.setBorder(javax.swing.BorderFactory.createTitledBorder("Autobus"));

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 397, Short.MAX_VALUE)
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 244, Short.MAX_VALUE)
        );

        jPanel5.setBorder(javax.swing.BorderFactory.createTitledBorder("Alojamiento"));

        javax.swing.GroupLayout jPanel5Layout = new javax.swing.GroupLayout(jPanel5);
        jPanel5.setLayout(jPanel5Layout);
        jPanel5Layout.setHorizontalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 0, Short.MAX_VALUE)
        );
        jPanel5Layout.setVerticalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 0, Short.MAX_VALUE)
        );

        jButtonEliminaDeLaPeregrinacion.setText("Eliminar de la peregrinaci√≥n");
        jButtonEliminaDeLaPeregrinacion.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonEliminaDeLaPeregrinacionActionPerformed(evt);
            }
        });

        jButtonAgregaPersonas.setText("Agragar personas");
        jButtonAgregaPersonas.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonAgregaPersonasActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanelPeregrinacionesLayout = new javax.swing.GroupLayout(jPanelPeregrinaciones);
        jPanelPeregrinaciones.setLayout(jPanelPeregrinacionesLayout);
        jPanelPeregrinacionesLayout.setHorizontalGroup(
            jPanelPeregrinacionesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanelPeregrinacionesLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanelPeregrinacionesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanelPeregrinacionesLayout.createSequentialGroup()
                        .addComponent(jButtonAgregaPersonas)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jButtonEliminaDeLaPeregrinacion))
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 586, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(jPanelPeregrinacionesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jPanel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPanel5, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(22, 22, 22))
        );
        jPanelPeregrinacionesLayout.setVerticalGroup(
            jPanelPeregrinacionesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanelPeregrinacionesLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanelPeregrinacionesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(jPanelPeregrinacionesLayout.createSequentialGroup()
                        .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jPanel5, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 545, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanelPeregrinacionesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButtonEliminaDeLaPeregrinacion)
                    .addComponent(jButtonAgregaPersonas))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jTabbedPane1.addTab("Peregrinaciones", jPanelPeregrinaciones);

        jPanelAutobuses.addComponentListener(new java.awt.event.ComponentAdapter() {
            public void componentShown(java.awt.event.ComponentEvent evt) {
                jPanelAutobusesComponentShown(evt);
            }
        });

        jTableAutobuses.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Descripci√≥n", "Plazas", "Observaciones", "id"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.Integer.class, java.lang.String.class, java.lang.Integer.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jTableAutobuses.getTableHeader().setReorderingAllowed(false);
        jTableAutobuses.addPropertyChangeListener(new java.beans.PropertyChangeListener() {
            public void propertyChange(java.beans.PropertyChangeEvent evt) {
                jTableAutobusesPropertyChange(evt);
            }
        });
        jScrollPane2.setViewportView(jTableAutobuses);
        if (jTableAutobuses.getColumnModel().getColumnCount() > 0) {
            jTableAutobuses.getColumnModel().getColumn(0).setResizable(false);
            jTableAutobuses.getColumnModel().getColumn(0).setPreferredWidth(150);
            jTableAutobuses.getColumnModel().getColumn(1).setResizable(false);
            jTableAutobuses.getColumnModel().getColumn(1).setPreferredWidth(20);
            jTableAutobuses.getColumnModel().getColumn(2).setResizable(false);
            jTableAutobuses.getColumnModel().getColumn(3).setResizable(false);
            jTableAutobuses.getColumnModel().getColumn(3).setPreferredWidth(20);
        }

        tablaPersonasBus.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Sel", "Id", "DNI", "Apellidos", "Nombre", "Tipo"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Boolean.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class
            };
            boolean[] canEdit = new boolean [] {
                true, false, false, false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        tablaPersonasBus.setAutoResizeMode(javax.swing.JTable.AUTO_RESIZE_OFF);
        tablaPersonasBus.setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);
        tablaPersonasBus.getTableHeader().setResizingAllowed(false);
        tablaPersonasBus.getTableHeader().setReorderingAllowed(false);
        jScrollPane4.setViewportView(tablaPersonasBus);
        if (tablaPersonasBus.getColumnModel().getColumnCount() > 0) {
            tablaPersonasBus.getColumnModel().getColumn(0).setResizable(false);
            tablaPersonasBus.getColumnModel().getColumn(0).setPreferredWidth(30);
            tablaPersonasBus.getColumnModel().getColumn(1).setResizable(false);
            tablaPersonasBus.getColumnModel().getColumn(1).setPreferredWidth(35);
            tablaPersonasBus.getColumnModel().getColumn(2).setResizable(false);
            tablaPersonasBus.getColumnModel().getColumn(2).setPreferredWidth(100);
            tablaPersonasBus.getColumnModel().getColumn(3).setResizable(false);
            tablaPersonasBus.getColumnModel().getColumn(3).setPreferredWidth(200);
            tablaPersonasBus.getColumnModel().getColumn(4).setResizable(false);
            tablaPersonasBus.getColumnModel().getColumn(4).setPreferredWidth(100);
            tablaPersonasBus.getColumnModel().getColumn(5).setResizable(false);
            tablaPersonasBus.getColumnModel().getColumn(5).setPreferredWidth(100);
        }

        javax.swing.GroupLayout jPanel6Layout = new javax.swing.GroupLayout(jPanel6);
        jPanel6.setLayout(jPanel6Layout);
        jPanel6Layout.setHorizontalGroup(
            jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel6Layout.createSequentialGroup()
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jScrollPane4, javax.swing.GroupLayout.DEFAULT_SIZE, 520, Short.MAX_VALUE)
                .addContainerGap())
        );
        jPanel6Layout.setVerticalGroup(
            jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 575, Short.MAX_VALUE)
            .addComponent(jScrollPane4)
        );

        javax.swing.GroupLayout jPanelAutobusesLayout = new javax.swing.GroupLayout(jPanelAutobuses);
        jPanelAutobuses.setLayout(jPanelAutobusesLayout);
        jPanelAutobusesLayout.setHorizontalGroup(
            jPanelAutobusesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanelAutobusesLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel6, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );
        jPanelAutobusesLayout.setVerticalGroup(
            jPanelAutobusesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanelAutobusesLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel6, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );

        jTabbedPane1.addTab("Autobuses", jPanelAutobuses);

        jPanelPersonasSinAutobus.addComponentListener(new java.awt.event.ComponentAdapter() {
            public void componentShown(java.awt.event.ComponentEvent evt) {
                jPanelPersonasSinAutobusComponentShown(evt);
            }
        });

        jTablePersonasSinAutobus.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Sel.", "Apellidos", "Nombre", "DNI", "Id"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Boolean.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class
            };
            boolean[] canEdit = new boolean [] {
                true, false, false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane3.setViewportView(jTablePersonasSinAutobus);

        jButton5.setText("Asignar autobus");
        jButton5.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton5ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanelPersonasSinAutobusLayout = new javax.swing.GroupLayout(jPanelPersonasSinAutobus);
        jPanelPersonasSinAutobus.setLayout(jPanelPersonasSinAutobusLayout);
        jPanelPersonasSinAutobusLayout.setHorizontalGroup(
            jPanelPersonasSinAutobusLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanelPersonasSinAutobusLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanelPersonasSinAutobusLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 554, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButton5))
                .addContainerGap(456, Short.MAX_VALUE))
        );
        jPanelPersonasSinAutobusLayout.setVerticalGroup(
            jPanelPersonasSinAutobusLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanelPersonasSinAutobusLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 550, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jButton5)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jTabbedPane1.addTab("Personas sin autobus", jPanelPersonasSinAutobus);

        jButtonCrearPersona.setText("Crear persona");

        jButton2.setText("Autobuses");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        jButton3.setText("Personas");
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });

        comboViaje.setModel(GestionViajesBD.getModeloComboViajes());
        comboViaje.setSelectedIndex(comboViaje.getModel().getSize()-1);
        comboViaje.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                comboViajeActionPerformed(evt);
            }
        });
        comboViaje.addPropertyChangeListener(new java.beans.PropertyChangeListener() {
            public void propertyChange(java.beans.PropertyChangeEvent evt) {
                comboViajePropertyChange(evt);
            }
        });

        jLabel2.setText("Peregrinaci√≥n");

        comboTipoViajero.setModel(GestionTiposViajeroBD.getModeloComboTipoViajero(true));
        comboTipoViajero.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                comboTipoViajeroActionPerformed(evt);
            }
        });

        jLabel3.setText("Tipo");

        jTextField1.setText("jTextField1");

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jTabbedPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 1025, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addGroup(jPanel2Layout.createSequentialGroup()
                                .addComponent(jLabel1)
                                .addGap(98, 98, 98)
                                .addComponent(jButtonCrearPersona)
                                .addGap(18, 18, 18))
                            .addGroup(jPanel2Layout.createSequentialGroup()
                                .addGap(17, 17, 17)
                                .addComponent(jLabel2)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(comboViaje, javax.swing.GroupLayout.PREFERRED_SIZE, 177, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(jLabel3)
                                .addGap(5, 5, 5)))
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel2Layout.createSequentialGroup()
                                .addComponent(comboTipoViajero, javax.swing.GroupLayout.PREFERRED_SIZE, 133, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(21, 21, 21)
                                .addComponent(jTextField1, javax.swing.GroupLayout.PREFERRED_SIZE, 101, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(jPanel2Layout.createSequentialGroup()
                                .addComponent(jButton2)
                                .addGap(18, 18, 18)
                                .addComponent(jButton3)))))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(jButtonCrearPersona)
                    .addComponent(jButton2)
                    .addComponent(jButton3))
                .addGap(18, 18, 18)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(comboViaje, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel2)
                    .addComponent(comboTipoViajero, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel3)
                    .addComponent(jTextField1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addComponent(jTabbedPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 625, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void comboTipoViajeroActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_comboTipoViajeroActionPerformed
        System.out.println(new Object(){}.getClass().getEnclosingMethod().getName());
        cargaTablaPersonas(true);
    }//GEN-LAST:event_comboTipoViajeroActionPerformed

    private void comboViajePropertyChange(java.beans.PropertyChangeEvent evt) {//GEN-FIRST:event_comboViajePropertyChange

    }//GEN-LAST:event_comboViajePropertyChange

    private void comboViajeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_comboViajeActionPerformed
        System.out.println("Combo peregrinaciones");
        if(jPanelPeregrinaciones.isVisible()){
            cargaTablaPersonas(true);
        }else if(jPanelAutobuses.isVisible()){
            cargaTablaAutobuses();
        }else if(jPanelPersonasSinAutobus.isVisible()){
            cargaTablaPersonasSinAutobus();
        }
    }//GEN-LAST:event_comboViajeActionPerformed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jButton2ActionPerformed

    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed
        //Abrir ventana con lista de personal para poder seleccionar.
        JDialog frame = new JDialog(this, "Gestion de personas", true);
        frame.setDefaultCloseOperation(JDialog.HIDE_ON_CLOSE);
        frame.getContentPane().add(new ListadoPersonas());
        frame.pack();
        frame.setLocationRelativeTo(this);
        frame.setVisible(true);
        //iniciarMisComponentes();
        frame.setVisible(false);
        cargaTablaPersonas(true);
    }//GEN-LAST:event_jButton3ActionPerformed

    private void jButtonEliminaDeLaPeregrinacionActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonEliminaDeLaPeregrinacionActionPerformed
        ArrayList<PersonaBean> lista = new ArrayList<PersonaBean>();
        for (int i = 0; i < tablaPersonas.getRowCount(); i++) {
            if ((boolean) tablaPersonas.getValueAt(i, 0)) {
                PersonaBean persona = new PersonaBean();
                persona.setIdPersona((String) tablaPersonas.getValueAt(i, 1));
                lista.add(persona);
            }
        }
        if(lista.size()<1){
            JOptionPane.showMessageDialog(null, "Debe seleccionar al menos una persona");
            return;
        
        }
        for (PersonaBean persona:lista){
            GestionViajesBD.eliminaPersonasPeregrinacion(persona.getIdPersona(), filtroViaje);

        }
        cargaTablaPersonas(true);
        
    }//GEN-LAST:event_jButtonEliminaDeLaPeregrinacionActionPerformed

    private void jTabbedPane1ComponentShown(java.awt.event.ComponentEvent evt) {//GEN-FIRST:event_jTabbedPane1ComponentShown
        System.out.println("Pesta√±a");        // TODO add your handling code here:
    }//GEN-LAST:event_jTabbedPane1ComponentShown

    private void jPanelAutobusesComponentShown(java.awt.event.ComponentEvent evt) {//GEN-FIRST:event_jPanelAutobusesComponentShown
        System.out.println("Perta√±a 2");
        cargaTablaAutobuses();
    }//GEN-LAST:event_jPanelAutobusesComponentShown

    private void jTableAutobusesPropertyChange(java.beans.PropertyChangeEvent evt) {//GEN-FIRST:event_jTableAutobusesPropertyChange
        
    }//GEN-LAST:event_jTableAutobusesPropertyChange

    private void jPanelPersonasSinAutobusComponentShown(java.awt.event.ComponentEvent evt) {//GEN-FIRST:event_jPanelPersonasSinAutobusComponentShown
        System.out.println("Perta√±a 3");
        cargaTablaPersonasSinAutobus();        // TODO add your handling code here:
    }//GEN-LAST:event_jPanelPersonasSinAutobusComponentShown

    private void jPanelPeregrinacionesComponentShown(java.awt.event.ComponentEvent evt) {//GEN-FIRST:event_jPanelPeregrinacionesComponentShown
        System.out.println("Perta√±a 1");
        cargaTablaPersonas(true);
    }//GEN-LAST:event_jPanelPeregrinacionesComponentShown

    private void jButton5ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton5ActionPerformed
        //Boton asignar autobus
        
        ArrayList<PersonaBean> lista = new ArrayList<PersonaBean>();
        for (int i = 0; i < jTablePersonasSinAutobus.getRowCount(); i++) {
            if ((boolean) jTablePersonasSinAutobus.getValueAt(i, 0)) {
                PersonaBean persona = new PersonaBean();
                persona.setIdPersona((String) jTablePersonasSinAutobus.getValueAt(i, 1));
                lista.add(persona);
            }
        }
        if(lista.size()<1){
            JOptionPane.showMessageDialog(null, "Debe seleccionar al menos una persona");
            return;
        
        }
        JDialog frame = new JDialog((JFrame) null, "Guardar", true);
        frame.setDefaultCloseOperation(JDialog.HIDE_ON_CLOSE);
        OpcionesGuardarPersonaAutobusModal ventana = new OpcionesGuardarPersonaAutobusModal();
        frame.getContentPane().add(ventana);
        frame.pack();
        frame.setLocationRelativeTo(this);
        frame.setVisible(true);
        
        String opcion=ventana.getBoton();
        if("G".equals(opcion)){
            int plazasLibre=GestionAutobusesBD.getNumPlazas(ventana.getAutobus());
            if(plazasLibre<=0){
                JOptionPane.showMessageDialog(null, "El autobus seleccionado no tiene plazas libres");
                return;
            }else if(plazasLibre<lista.size()){
                JOptionPane.showMessageDialog(null, "El autobus seleccionado no tiene suficientes plazas libres");
                return;
            }else{
                for(PersonaBean persona:lista){
                    GestionAutobusesBD.setPasajeroAutobus(ventana.getAutobus(), persona.getIdPersona());
                }
            }
        }
        
        
        cargaTablaPersonasSinAutobus();
    }//GEN-LAST:event_jButton5ActionPerformed

    private void jButtonAgregaPersonasActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonAgregaPersonasActionPerformed
        filtroViaje=comboViaje.getModel().getElementAt(comboViaje.getSelectedIndex()).split(" - ")[0];
        JDialog frame = new JDialog(this, "Gestion de personas", true);
        frame.setDefaultCloseOperation(JDialog.HIDE_ON_CLOSE);
        ListadoPersonasAsignar ventana=new ListadoPersonasAsignar(filtroViaje);
        frame.getContentPane().add(ventana);
        frame.pack();
        frame.setLocationRelativeTo(this);
        frame.setVisible(true);
        //iniciarMisComponentes();
        if("G".equals(ventana.getBoton())){
            String mensaje=GestionViajesBD.guardaPersonasPeregrinacionUnitaria(ventana.getListaPersonasSelec(), filtroViaje, ventana.getTipoViajero());
            JOptionPane.showMessageDialog(null, mensaje);
            cargaTablaPersonas(true);
        }else{
            return;
        }
    }//GEN-LAST:event_jButtonAgregaPersonasActionPerformed

    private void ponListenerTablaAutobuses(){
        jTableAutobuses.getSelectionModel().addListSelectionListener(new ListSelectionListener() {
            @Override
            public void valueChanged(ListSelectionEvent evento) {
                ListSelectionModel lsm = (ListSelectionModel) evento.getSource();
                int indice = lsm.getMinSelectionIndex();
                if (indice != -1) {
                    String idAutobus=(String) jTableAutobuses.getModel().getValueAt(indice, 3);
                    cargarPasajerosTabla(idAutobus);
                }
            }

            
        });
    }
    
    private void cargarPasajerosTabla(String idAutobus) {
        System.out.println(new Object(){}.getClass().getEnclosingMethod().getName());
        AutobusBean autobus=new AutobusBean();
        autobus.setIdAutobus(idAutobus);
        autobus.cargaDatos();
        ArrayList<PersonaBean> listaPersonas=autobus.getPasajeros();
        DefaultTableModel datosTabla = (DefaultTableModel) tablaPersonasBus.getModel();
        for (int i = datosTabla.getRowCount(); i > 0; i--) {
            datosTabla.removeRow(i - 1);
        }
        for (PersonaBean persona : listaPersonas){
            datosTabla.addRow(new Object[]{
                false,
                ""+persona.getIdPersona(),
                persona.getDNI(),
                persona.getApellidos(),
                persona.getNombre(),
                persona.getFechaNacimiento()//,
                //GestionTiposViajeroBD.getTipoViajero(autobus.getIdViaje(), persona.getIdPersona()).getNombreTipo()
            });
        }
    }
    
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Principal.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Principal.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Principal.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Principal.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Principal().setVisible(true);
                
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JComboBox<String> comboTipoViajero;
    private javax.swing.JComboBox<String> comboViaje;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton3;
    private javax.swing.JButton jButton5;
    private javax.swing.JButton jButtonAgregaPersonas;
    private javax.swing.JButton jButtonCrearPersona;
    private javax.swing.JButton jButtonEliminaDeLaPeregrinacion;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel5;
    private javax.swing.JPanel jPanel6;
    private javax.swing.JPanel jPanelAutobuses;
    private javax.swing.JPanel jPanelPeregrinaciones;
    private javax.swing.JPanel jPanelPersonasSinAutobus;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JScrollPane jScrollPane4;
    private javax.swing.JTabbedPane jTabbedPane1;
    private javax.swing.JTable jTableAutobuses;
    private javax.swing.JTable jTablePersonasSinAutobus;
    private javax.swing.JTextField jTextField1;
    private javax.swing.JTable tablaPersonas;
    private javax.swing.JTable tablaPersonasBus;
    // End of variables declaration//GEN-END:variables

    private void cargaTablaPersonas(boolean tipo) {
        System.out.println(new Object(){}.getClass().getEnclosingMethod().getName());
        filtroViaje=comboViaje.getModel().getElementAt(comboViaje.getSelectedIndex()).split(" - ")[0];
        filtroTipoViajero=comboTipoViajero.getModel().getElementAt(comboTipoViajero.getSelectedIndex()).split(" - ")[0];
        listaPersonas = GestionPersonasBD.getListaPersonas(tipo,filtroViaje,filtroTipoViajero);
        DefaultTableModel datosTabla = (DefaultTableModel) tablaPersonas.getModel();
        for (int i = datosTabla.getRowCount(); i > 0; i--) {
            datosTabla.removeRow(i - 1);
        }
        for (PersonaBean persona : listaPersonas){
            datosTabla.addRow(new Object[]{
                false,
                ""+persona.getIdPersona(),
                persona.getDNI(),
                persona.getApellidos()+", "+persona.getNombre(),
                persona.getFechaNacimiento(),
                GestionTiposViajeroBD.getTipoViajero(filtroViaje, persona.getIdPersona()).getNombreTipo()
            });
        }
    }
    
    private void cargaTablaAutobuses() {
        System.out.println(new Object(){}.getClass().getEnclosingMethod().getName());
        DefaultTableModel datosTabla = (DefaultTableModel) tablaPersonasBus.getModel();
        for (int i = datosTabla.getRowCount(); i > 0; i--) {
            datosTabla.removeRow(i - 1);
        }
        
        filtroViaje=comboViaje.getModel().getElementAt(comboViaje.getSelectedIndex()).split(" - ")[0];
        filtroTipoViajero=comboTipoViajero.getModel().getElementAt(comboTipoViajero.getSelectedIndex()).split(" - ")[0];
        listaAutobuses = GestionAutobusesBD.getListaAutobuses(filtroViaje);
        datosTabla = (DefaultTableModel) jTableAutobuses.getModel();
        for (int i = datosTabla.getRowCount(); i > 0; i--) {
            datosTabla.removeRow(i - 1);
        }
        for (AutobusBean autobus : listaAutobuses){
            datosTabla.addRow(new Object[]{
                autobus.getDescripcion(),
                autobus.getPlazas(),
                autobus.getObservaciones(),
                autobus.getIdAutobus()
            });
        }
    }

    private void cargaTablaPersonasSinAutobus() {
        System.out.println(new Object(){}.getClass().getEnclosingMethod().getName());
        filtroViaje=comboViaje.getModel().getElementAt(comboViaje.getSelectedIndex()).split(" - ")[0];
        listaPersonas = GestionPersonasBD.getListaPersonasSinAutobus(filtroViaje);
        DefaultTableModel datosTabla = (DefaultTableModel) jTablePersonasSinAutobus.getModel();
        for (int i = datosTabla.getRowCount(); i > 0; i--) {
            datosTabla.removeRow(i - 1);
        }
        for (PersonaBean persona : listaPersonas){
            datosTabla.addRow(new Object[]{
                false,
                ""+persona.getIdPersona(),
                persona.getDNI(),
                persona.getApellidos()+", "+persona.getNombre(),
                persona.getFechaNacimiento()//,
                //GestionTiposViajeroBD.getTipoViajero(filtroViaje, persona.getIdPersona()).getNombreTipo()
            });
        }
    }

    
}
